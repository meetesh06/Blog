{"version":3,"sources":["components/helper.js","features/sidebarState.js","config.js","components/LeftSidebar.js","features/currentPostSlice.js","features/allPostsSlice.js","features/secretState.js","components/RightSidebar.js","components/SelectedPost.js","components/PostCard.js","components/PostsContainer.js","components/SearchableActionBar.js","components/HomeContent.js","components/PostPage.js","components/CircularProgressWithLabel.js","App.js","store.js","index.js"],"names":["parsePostUrl","id","title","nonCachedRequest","url","Date","getTime","sortPosts","a","b","created","sidebarSlice","createSlice","name","initialState","mobileVisible","reducers","updateVisiblity","state","action","payload","actions","selectVisiblity","sidebarState","blogConfig","blogRoot","blogName","blogDescription","authorName","authorEmail","authorImage","authorDescription","URI_POSTS","URI_POST_FILES","sidebarTheme","blogLeftDrawerBackground","blogLogo","textTitle","textDesc","textDate","dark","light","primary","main","contrastText","secondary","leftDrawerWidth","useStyles","makeStyles","theme","drawer","breakpoints","up","width","flexShrink","drawerPaper","leftSide","backgroundColor","flexGrow","padding","spacing","display","flexDirection","leftTop","flex","siteName","fontWeight","typography","fontWeightLight","color","fontSize","cursor","marginTop","marginBottom","textDecoration","siteDescription","body2","avatarContainer","largeAvatar","height","alignSelf","fontWeightRegular","authorDes","caption","fontWeightMedium","borderLeft","palette","LeftSidebar","props","window","classes","container","undefined","document","body","mobileOpen","useSelector","dispatch","useDispatch","className","Typography","component","Link","to","align","variant","BLOG","paragraph","Avatar","alt","src","Tooltip","aria-label","arrow","href","IconButton","Hidden","smUp","implementation","Drawer","open","onClose","paper","ModalProps","keepMounted","smDown","currentSlice","currentPost","updateCurrentPost","selectCurrentPost","allPostsSlice","postsJson","updatePostsJson","getPostsJson","secretSlice","secret","updateSecret","selectSecret","secretState","rightAside","paddingTop","lineageHolder","lineageList","maxHeight","overflow","passButton","captionText","RightSidebar","posts","post","React","useState","openSecrets","setOpenSecrets","setOpen","sec","setSec","secretPass","lineageData","lineage","JSONPath","path","json","sort","list","calculateLineage","secrets","Card","root","CardContent","noValidate","autoComplete","TextField","type","onChange","e","target","value","fullWidth","label","Button","onClick","ListItem","button","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","List","dense","arr","moment","toDate","getSorted","map","index","selected","ListItemAvatar","description","length","marginLeft","marginRight","date","fontWeightBold","pxToRem","postContainer","skeletonContainer","cardPostTitle","cardPostDesc","heading","LatestPost","postLatest","CardActionArea","gutterBottom","margin","PostCard","clickableArea","down","tabContainer","maxWidth","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","PostsContainer","setValue","blogData","Tabs","scrollButtons","event","newValue","categories","Tab","a11yProps","Grid","item","xs","sm","actionBar","SearchableActionBar","toggle","mdUp","edge","Autocomplete","freeSolo","parseInt","split","options","option","renderInput","params","HomeContent","div","initial","animate","exit","variants","opacity","scale","out","transition","duration","SelectedPost","minHeight","fontFamily","divider","categoryName","dateHolder","alignItems","dateStyle","markdownHolder","markdownImage","loader","LoadingHeader","postMetaData","Chip","category","Divider","useParams","idRaw","loadingPost","setLoadingPost","setPostMetaData","postData","setPostData","found","setFound","smoothLoadingEnd","useEffect","meta","axios","get","link","then","response","data","Crypto","AES","decrypt","toString","enc","Utf8","lines","splice","newtext","join","catch","err","finally","renderPostFromLink","msg","renderers","math","block","inlineMath","code","language","wrapLongLines","wrapLines","style","xonokai","image","LinearProgress","y","Paper","elevation","plugins","Skeleton","borderRadius","CircularProgressWithLabel","position","CircularProgress","top","left","bottom","right","justifyContent","Math","round","content","noPostContainer","mainContent","ResponsiveDrawer","loadingPosts","setLoadingPosts","progress","setProgress","noPost","setNoPost","lightTheme","createMuiTheme","loc","useLocation","onDownloadProgress","progressEvent","lengthComputable","percentCompleted","loaded","total","error","console","log","ThemeProvider","Backdrop","invisible","exitBeforeEnter","location","PostPage","pathname","configureStore","reducer","postsJsonReducer","currentSliceReducer","ReactDOM","render","store","basename","process","getElementById"],"mappings":"iNAAMA,EAAe,SAACC,EAAIC,GACxB,MAAO,SAASD,EAAG,IAAIC,GAGnBC,EAAmB,SAACC,GACxB,OAAOA,EAAI,eAAc,IAAIC,MAAOC,WAItC,SAASC,EAAUC,EAAGC,GACpB,OAAO,IAAIJ,KAAKI,EAAEC,SAASJ,UAAY,IAAID,KAAKG,EAAEE,SAASJ,U,4GCRhDK,EAAeC,YAAY,CACtCC,KAAM,eACNC,aAAc,CACZC,eAAe,GAEjBC,SAAU,CACRC,gBAAiB,SAACC,EAAOC,GACvBD,EAAMH,cAAgBI,EAAOC,YAMpBH,EAAoBN,EAAaU,QAAjCJ,gBACFK,EAAkB,SAACJ,GAAD,OAAWA,EAAMK,aAAaR,eAE9CJ,IAAf,Q,QCuBea,EAzCI,CACfC,SAAU,QACVC,SAAU,WACVC,gBAAiB,kIACjBC,WAAY,kBACZC,YAAa,0BACbC,YAAa,qBACbC,kBAAmB,yJACnBC,UAAW,yBACXC,eAAgB,cAChBC,aAAc,CACVC,yBAA0B,OAC1BC,SAAU,OACVT,gBAAiB,UACjBC,WAAY,UACZG,kBAAmB,UACnBM,UAAW,UACXC,SAAU,UACVC,SAAU,WAGdC,KAAM,GAGNC,MAAO,CACHC,QAAS,CACLD,MAAO,UACPE,KAAM,UACNH,KAAM,UACNI,aAAc,QAElBC,UAAW,CACPJ,MAAO,UACPE,KAAM,UACNH,KAAM,UACNI,aAAc,U,OCTpBE,EAAkB,IAElBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAO,eACJD,EAAME,YAAYC,GAAG,MAAQ,CAC5BC,MAAOP,EACPQ,WAAY,IAGhBC,YAAa,CACXF,MAAOP,GAGTU,SAAU,CACRC,gBAAiBR,EAAMd,yBACvBuB,SAAU,EACVC,QAASV,EAAMW,QAAQ,GACvBC,QAAS,OACTC,cAAe,UAEjBC,QAAS,CACPC,KAAM,GAERC,SAAU,CACRC,WAAYjB,EAAMkB,WAAWC,gBAC7BC,MAAOpB,EAAMb,SACbkC,SAAU,OACVC,OAAQ,UACRC,UAAWvB,EAAMW,QAAQ,GACzBa,aAAcxB,EAAMW,QAAQ,GAC5Bc,eAAgB,QAElBC,gBAAgB,2BACX1B,EAAMkB,WAAWS,OADP,IAEbP,MAAOpB,EAAMtB,gBACb2C,SAAU,SAEZO,gBAAiB,CACfhB,QAAS,OACTC,cAAe,UAEjBgB,YAAa,CACXzB,MAAOP,GACPiC,OAAQjC,GACRkC,UAAW,UAEbpD,WAAY,CACV4C,UAAWvB,EAAMW,QAAQ,GACzBa,aAAcxB,EAAMW,QAAQ,GAC5BS,MAAOpB,EAAMrB,WACbsC,WAAYjB,EAAMkB,WAAWc,kBAC7BD,UAAW,UAEbE,UAAU,2BACLjC,EAAMkB,WAAWgB,SADb,IAEPd,MAAOpB,EAAMlB,kBACbmC,WAAYjB,EAAMkB,WAAWiB,iBAC7BzB,QAASV,EAAMW,UACfyB,WAAW,aAAD,OAAepC,EAAMqC,QAAQ5C,QAAQC,YAyFpC4C,MApFf,SAAqBC,GAAQ,IACnBC,EAAWD,EAAXC,OACFC,EAAU3C,IACV4C,OAAuBC,IAAXH,EAAuB,kBAAMA,IAASI,SAASC,WAAOF,EAClEG,EAAcC,YAAY1E,GAC1B2E,EAAWC,cAMXhD,EACJ,sBAAKiD,UAAWT,EAAQlC,SAAxB,UACE,cAAC4C,EAAA,EAAD,CAAYC,UAAWC,IAAMC,GAAG,IAAIC,MAAM,OAAOC,QAAQ,KAAKN,UAAWT,EAAQzB,SAAjF,SACGyC,EAAKhF,WAER,qBAAKyE,UAAWT,EAAQ3B,QAAxB,SACE,eAACqC,EAAA,EAAD,CAAYO,WAAS,EAACR,UAAWT,EAAQf,gBAAzC,UACG+B,EAAK/E,gBACN,uBACA,4BAGJ,8BACE,sBAAKwE,UAAWT,EAAQb,gBAAxB,UACE,cAAC+B,EAAA,EAAD,CACEJ,MAAM,SACNK,IAAKH,EAAK9E,WAAa,aACvBkF,IAAKJ,EAAK5E,YACVqE,UAAWT,EAAQZ,cACrB,cAACsB,EAAA,EAAD,CAAYI,MAAM,OAAOC,QAAQ,KAAKN,UAAWT,EAAQ9D,WAAzD,SACG8E,EAAK9E,aAER,cAACwE,EAAA,EAAD,CAAYO,WAAS,EAACH,MAAM,OAAOL,UAAWT,EAAQR,UAAtD,SACGwB,EAAK3E,oBAER,cAACgF,EAAA,EAAD,CAAS7G,MAAOwG,EAAK7E,YAAamF,aAAW,QAAQC,OAAK,EAA1D,SACE,cAAC,IAAD,CAAYC,KAAM,UAAUR,EAAK7E,YAAjC,SACE,cAACsF,EAAA,EAAD,CAAY9C,MAAM,UAAU2C,aAAW,eAAvC,SACE,cAAC,IAAD,kBAWd,OAEE,sBAAKb,UAAWT,EAAQxC,OAAQ8D,aAAW,eAA3C,UACE,cAACI,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,MAA5B,SACE,cAACC,EAAA,EAAD,CACE5B,UAAWA,EACXc,QAAQ,YACRe,KAAMzB,EACN0B,QAnDoB,WAC1BxB,EAAShF,GAAiB8E,KAmDpBL,QAAS,CACLgC,MAAOhC,EAAQnC,aAEnBoE,WAAY,CACRC,aAAa,GATnB,SAYC1E,MAGH,cAACkE,EAAA,EAAD,CAAQS,QAAM,EAACP,eAAe,MAA9B,SACE,cAACC,EAAA,EAAD,CACE7B,QAAS,CACPgC,MAAOhC,EAAQnC,aAEjBkD,QAAQ,YACRe,MAAI,EALN,SAOGtE,U,oLCpKE4E,GAAelH,YAAY,CACtCC,KAAM,cACNC,aAAc,CACZiH,YAAa,MAEf/G,SAAU,CACRgH,kBAAmB,SAAC9G,EAAOC,GACzBD,EAAM6G,YAAc5G,EAAOC,YAMlB4G,GAAsBF,GAAazG,QAAnC2G,kBACFC,GAAoB,SAAC/G,GAAD,OAAWA,EAAM6G,YAAYA,aAE/CD,MAAf,QChBaI,GAAgBtH,YAAY,CACvCC,KAAM,YACNC,aAAc,CACZqH,UAAW,IAEbnH,SAAU,CACRoH,gBAAiB,SAAClH,EAAOC,GAEvBD,EAAMiH,UAAYhH,EAAOC,YAKhBgH,GAAoBF,GAAc7G,QAAlC+G,gBACFC,GAAe,SAACnH,GAAD,OAAWA,EAAMiH,UAAUA,WAExCD,MAAf,Q,oBChBaI,GAAc1H,YAAY,CACrCC,KAAM,cACNC,aAAc,CACZyH,YAAQ3C,GAEV5E,SAAU,CACRwH,aAAc,SAACtH,EAAOC,GACpBD,EAAMqH,OAASpH,EAAOC,YAMboH,GAAiBF,GAAYjH,QAA7BmH,aACFC,GAAe,SAACvH,GAAD,OAAWA,EAAMwH,YAAYH,QAE1CD,MAAf,Q,qBCqBM5B,GACc,IAKd3D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0F,WAAY,CACVtF,MAAOqD,GACP/C,QAASV,EAAMW,QAAQ,GACvBgF,WAAY3F,EAAMW,QAAQ,IAE5BiF,cAAe,CACbrE,UAAWvB,EAAMW,QAAQ,IAE3BkF,YAAa,CACXC,UAAW,IACXC,SAAU,UASZC,WAAY,CACVzE,UAAW,IAEb0E,YAAa,CACX7E,MAAOpB,EAAMkB,WAAWgB,QAAQd,WAyLrB8E,OArLf,SAAsB3D,GACpB,IAAME,EAAU3C,KACVqG,EAAQpD,YAAYqC,IACpBgB,EAAOrD,YAAYiC,IAHE,EAKWqB,IAAMC,UAAS,GAL1B,mBAKpBC,EALoB,KAKPC,EALO,OAMHH,IAAMC,UAAS,GANZ,mBAMpB/B,EANoB,KAMdkC,EANc,OAOLJ,IAAMC,SAAS,IAPV,mBAOpBI,EAPoB,KAOfC,EAPe,KASrB3D,EAAWC,cAEX2D,EAAa7D,YAAYyC,IAYzBqB,EAVN,WACE,GAAY,OAATT,QAA0BzD,IAATyD,QAAuCzD,IAAjByD,EAAKU,QAAuB,CACpE,IAAMjB,EAAckB,YAAS,CAACC,KAAK,4BAAD,OAA8BZ,EAAKU,QAAnC,OAAiDG,KAAMd,IAEzF,OADAN,EAAYqB,KAAK5J,GACV,CAAC6J,KAAMtB,EAAa7I,GAAIoJ,EAAKpJ,GAAIY,KAAMwI,EAAKU,SAEnD,MAAO,GAISM,GAEhBC,EAAUlB,EAAMkB,QAuCpB,OACE,cAAClD,EAAA,EAAD,CAAQS,QAAM,EAACP,eAAe,MAA9B,SACE,sBAAKnB,UAAWT,EAAQiD,WAAxB,UACE,cAAC4B,EAAA,EAAD,CAAMpE,UAAWT,EAAQ8E,KAAzB,SACE,cAACC,EAAA,EAAD,UACE,uBAAMC,YAAU,EAACC,aAAa,MAA9B,UACE,cAACC,GAAA,EAAD,CAAWC,KAAK,WAAWF,aAAa,WAAWG,SAjBpC,SAACC,GAC1BnB,EAAOmB,EAAEC,OAAOC,QAgB2EC,WAAS,EAACjL,GAAG,iBAAiBkL,MAAM,oBAAoB1E,QAAQ,aACjJ,cAAC2E,GAAA,EAAD,CAAQC,QAdQ,SAACN,GAG3B9E,EAASuC,GAFDmB,KAawCtF,MAAM,YAAY8B,UAAWT,EAAQuD,WAAYiC,WAAS,EAACzE,QAAQ,WAAzG,+BAKQb,IAAZ0E,QAAwC1E,IAAfiE,GAA2C,KAAfA,EAAqB,uBACxE,sBAAK1D,UAAWT,EAAQmD,cAAxB,UACE,eAACyC,EAAA,EAAD,CAAUC,QAAM,EAACF,QA7BF,WACzB5B,GAAgBD,IA4BN,UACE,cAACgC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAc/I,QAAS,UAAWG,UAAU,2BAC3C2G,EAAc,cAAC,IAAD,IAAiB,cAAC,IAAD,OAElC,eAACkC,EAAA,EAAD,CAAUC,GAAInC,EAAaoC,QAAQ,OAAOC,eAAa,EAAvD,UACE,cAACC,EAAA,EAAD,CAAM3F,UAAWT,EAAQoD,YAAaiD,OAAO,EAA7C,SAnDI,SAACvL,GACjB,IAAIwL,EAAG,YAAOxL,GAMd,OALAwL,EAAI7B,MAAK,SAAS3J,EAAEC,GAElB,OAAOwL,KAAOxL,EAAEC,QAAS,cAAcwL,SAAWD,KAAOzL,EAAEE,QAAS,cAAcwL,YAG7EF,EA8CSG,CAAU7B,GAAS8B,KAAI,SAAC/C,EAAMgD,GAC5B,OACE,eAACf,EAAA,EAAD,CAAiCjF,UAAWC,IAAMC,GAAIvG,EAAaqJ,EAAKpJ,GAAIoJ,EAAKnJ,OAAQoM,SAAUjD,EAAKpJ,KAAO6J,EAAY7J,GAAIsL,QAAM,EAArI,UACE,cAACgB,EAAA,EAAD,UAEIlD,EAAKpJ,KAAO6J,EAAY7J,GACxB,cAAC2G,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,KAAD,QAKN,cAAC6E,EAAA,EAAD,CACE/I,QAAS2G,EAAKmD,YACd3J,UAAWwG,EAAK3I,YAfL,WAAW2L,QAuBhC/B,EAAQmC,OAAS,GACf,eAACrG,EAAA,EAAD,CAAYK,QAAQ,UAAUJ,UAAU,IAAIG,MAAM,SAASL,UAAWT,EAAQwD,YAA9E,mBACSoB,EAAQmC,OADjB,gDAWW7G,IAArBkE,EAAYjJ,KAAsB,uBAChC,sBAAKsF,UAAWT,EAAQmD,cAAxB,UACE,eAACyC,EAAA,EAAD,CAAUC,QAAM,EAACF,QAlFT,WAClB3B,GAASlC,IAiFC,UACE,cAACgE,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAc/I,QAASoH,EAAYjJ,KAAMgC,UAAU,qDAClD2E,EAAO,cAAC,IAAD,IAAiB,cAAC,IAAD,OAE3B,eAACkE,EAAA,EAAD,CAAUC,GAAInE,EAAMoE,QAAQ,OAAOC,eAAa,EAAhD,UACE,cAACC,EAAA,EAAD,CAAM3F,UAAWT,EAAQoD,YAAaiD,OAAO,EAA7C,SAEIjC,EAAYM,KAAKgC,KAAI,SAAC/C,EAAMgD,GAC1B,OACE,eAACf,EAAA,EAAD,CAAiCjF,UAAWC,IAAMC,GAAIvG,EAAaqJ,EAAKpJ,GAAIoJ,EAAKnJ,OAAQoM,SAAUjD,EAAKpJ,KAAO6J,EAAY7J,GAAIsL,QAAM,EAArI,UACE,cAACgB,EAAA,EAAD,UAEIlD,EAAKpJ,KAAO6J,EAAY7J,GACxB,cAAC2G,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,KAAD,QAKN,cAAC6E,EAAA,EAAD,CACE/I,QAAS2G,EAAKnJ,MACd2C,UAAWwG,EAAK3I,YAfL,WAAW2L,QAuBhCvC,EAAYM,KAAKqC,OAAS,GACxB,eAACrG,EAAA,EAAD,CAAYK,QAAQ,UAAUJ,UAAU,IAAIG,MAAM,SAASL,UAAWT,EAAQwD,YAA9E,mBACSY,EAAYM,KAAKqC,OAD1B,iD,UCzNd1J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuH,KAAM,CACJkC,WAAYzJ,EAAMW,QAAQ,GAC1B+I,YAAa1J,EAAMW,QAAQ,GAC3BY,UAAWvB,EAAMW,QAAQ,IAE3BgJ,KAAM,CACJ1I,WAAYjB,EAAMkB,WAAW0I,eAC7BvI,SAAUrB,EAAMkB,WAAW2I,QAAQ,IACnCzI,MAAOpB,EAAMV,SACbiC,UAAWvB,EAAMW,QAAQ,IAE3BmJ,cAAe,CACbvI,UAAWvB,EAAMW,QAAQ,GACzBP,MAAO,QAET2J,kBAAmB,CACjBxI,UAAWvB,EAAMW,QAAQ,IAE3BqJ,cAAe,CACb/I,WAAYjB,EAAMkB,WAAW0I,gBAE/BK,aAAc,CACZhJ,WAAYjB,EAAMkB,WAAWc,kBAC7BX,SAAUrB,EAAMkB,WAAW2I,QAAQ,KAErCK,QAAS,CACPjJ,WAAYjB,EAAMkB,WAAW0I,eAC7BvI,SAAUrB,EAAMkB,WAAW2I,QAAQ,SAsCxBM,OAhCf,SAAoB5H,GAClB,IAAME,EAAU3C,KACZsG,EAAOrD,YAAYiC,IACjBoF,EAAarH,YAAYqC,IAAce,MAAM,GAGnD,OAFa,OAATC,IAAeA,EAAOgE,GAGxB,qBAAKlH,UAAWT,EAAQ8E,KAAxB,SACE,gCACE,cAACpE,EAAA,EAAD,CAAYD,UAAWT,EAAQyH,QAAS1G,QAAQ,KAAKJ,UAAU,KAA/D,uBAGA,cAACkE,EAAA,EAAD,CAAMpE,UAAWT,EAAQqH,cAAzB,SACE,cAACO,GAAA,EAAD,CAAgBjH,UAAWC,IAAMC,GAAIvG,EAAaqJ,EAAKpJ,GAAIoJ,EAAKnJ,OAAhE,SACE,eAACuK,EAAA,EAAD,WACE,cAACrE,EAAA,EAAD,CAAYD,UAAWT,EAAQuH,cAAeM,cAAY,EAAC9G,QAAQ,KAAKJ,UAAU,KAAlF,SACGgD,EAAKnJ,QAER,cAACkG,EAAA,EAAD,CAAYD,UAAWT,EAAQwH,aAAczG,QAAQ,QAAQJ,UAAU,IAAvE,SACGgD,EAAKmD,cAER,cAACpG,EAAA,EAAD,CAAYD,UAAWT,EAAQkH,KAA/B,SACGvD,EAAK3I,uB,kDC7DhBqC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2J,KAAM,CACJ1I,WAAYjB,EAAMkB,WAAW0I,eAC7BvI,SAAUrB,EAAMkB,WAAW2I,QAAQ,IACnCzI,MAAOpB,EAAMV,SACbiC,UAAWvB,EAAMW,QAAQ,IAE3BmJ,cAAe,CACbS,OAAQvK,EAAMW,QAAQ,IAExBqJ,cAAe,CACb/I,WAAYjB,EAAMkB,WAAW0I,eAC7BvI,SAAUrB,EAAMkB,WAAW2I,QAAQ,IACnC9D,SAAU,UAEZkE,aAAc,CACZhJ,WAAYjB,EAAMkB,WAAWc,kBAC7BX,SAAUrB,EAAMkB,WAAW2I,QAAQ,SA2BxBW,OAtBf,SAAkBjI,GAChB,IAAME,EAAU3C,KACVsG,EAAO7D,EAAM6D,KACnB,OACE,cAACkB,EAAA,EAAD,CAAMpE,UAAWT,EAAQqH,cAAzB,SACE,cAACO,GAAA,EAAD,CAAgBnH,UAAWT,EAAQgI,cAAerH,UAAWC,IAAMC,GAAIvG,EAAaqJ,EAAKpJ,GAAIoJ,EAAKnJ,OAAlG,SACE,eAACuK,EAAA,EAAD,WACE,cAACrE,EAAA,EAAD,CAAYD,UAAWT,EAAQuH,cAAeM,cAAY,EAAC9G,QAAQ,KAAKJ,UAAU,KAAlF,SACGgD,EAAKnJ,QAER,cAACkG,EAAA,EAAD,CAAYD,UAAWT,EAAQwH,aAAczG,QAAQ,QAAQpC,MAAM,gBAAgBgC,UAAU,IAA7F,SACGgD,EAAKmD,cAER,cAACpG,EAAA,EAAD,CAAYD,UAAWT,EAAQkH,KAA/B,SACGvD,EAAK3I,kBClCZqC,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCuH,KAAK,aACHhG,UAAWvB,EAAMW,QAAQ,GACzBoF,SAAU,UACT/F,EAAME,YAAYwK,KAAK,MAAQ,CAC9BjB,WAAYzJ,EAAMW,QAAQ,GAC1B+I,YAAa1J,EAAMW,QAAQ,GAC3BY,UAAWvB,EAAMW,QAAQ,KAG7BgK,cAAY,mBACT3K,EAAME,YAAYwK,KAAK,MAAQ,CAC9BE,SAAU,SAFF,yBAIA,QAJA,OASd,SAASC,GAAStI,GAAQ,IAChBuI,EAAqCvI,EAArCuI,SAAU9C,EAA2BzF,EAA3ByF,MAAOoB,EAAoB7G,EAApB6G,MAAU2B,EADZ,aACsBxI,EADtB,8BAEvB,OACE,6CACEyI,KAAK,WACLC,OAAQjD,IAAUoB,EAClBpM,GAAE,0BAAqBoM,GACvB8B,kBAAA,qBAA+B9B,IAC3B2B,GALN,aAOG/C,IAAUoB,GACT,cAAC+B,GAAA,EAAD,CAAKC,EAAG,EAAR,SACGN,OAgEIO,OAlDf,SAAwB9I,GACtB,IAAME,EAAU3C,KADa,EAEHuG,IAAMC,SAAS,GAFZ,mBAEtB0B,EAFsB,KAEfsD,EAFe,KAIvBC,EAAWxI,YAAYqC,IAO7B,OACE,qBAAKlC,UAAWT,EAAQ8E,KAAxB,SACE,gCACI,qBAAKrE,UAAWT,EAAQkI,aAAxB,SACE,cAACa,GAAA,EAAD,CACEhI,QAAQ,aACRiI,cAAc,KACdzD,MAAOA,EACPH,SAZS,SAAC6D,EAAOC,GAC3BL,EAASK,IAYC5H,aAAW,mBALb,SAOIwH,EAASK,WAAWzC,KAAI,SAACjB,EAAOkB,GAAR,OACtB,cAACyC,GAAA,EAAD,aAA+B3D,MAAOA,GA9BxD,SAAmBkB,GACjB,MAAO,CACLpM,GAAG,cAAD,OAAgBoM,GAClB,gBAAgB,mBAAhB,OAAoCA,IA2B2B0C,CAAU1C,IAAjDA,EAAM,sBAMxBmC,EAASK,WAAWzC,KAAI,SAACjB,EAAOkB,GAC9B,OACE,cAACyB,GAAD,CAAU7C,MAAOA,EAAOoB,MAAOA,EAA/B,SACE,cAAC2C,GAAA,EAAD,CAAMrJ,WAAS,EAAC/B,QAAS,EAAzB,SAEIoG,YAAS,CAACC,KAAK,6BAAD,OAA+BkB,EAA/B,OAA2CjB,KAAMsE,IAAWpC,KAAI,SAAC/C,GAAD,OAC5E,cAAC2F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,CAAU9F,KAAMA,KADaA,EAAKpJ,UAJDoM,EAAM,gB,+BC5EzDtJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmM,UAAW,CACT5K,UAAWvB,EAAMW,QAAQ,GACzB8I,WAAYzJ,EAAMW,QAAQ,GAC1B+I,YAAa1J,EAAMW,QAAQ,QA+ChByL,OA1Cf,SAA6B7J,GAC3B,IAAME,EAAU3C,KAERqG,EAAUpD,YAAYqC,IAAtBe,MACFkG,EAAUtJ,YAAY1E,GACtB2E,EAAWC,cAajB,OACE,sBAAKC,UAAWT,EAAQ0J,UAAxB,UACE,cAAChI,EAAA,EAAD,CAAQmI,MAAI,EAACjI,eAAe,MAA5B,SACE,cAACH,EAAA,EAAD,CACE9C,MAAM,UACN2C,aAAW,cACXwI,KAAK,QACLnE,QAXoB,WAC1BpF,EAAShF,GAAiBqO,KAMtB,SAME,cAAC,KAAD,QAGJ,cAACG,GAAA,EAAD,CACEC,UAAQ,EACR5E,SAzBe,SAAC6D,EAAOC,GAC3B,GAAgB,OAAbA,EAAH,CACA,IAAIvC,EAAQsD,SAASf,EAASgB,MAAM,MAAM,IAC1C3J,EAAS+B,GAAkBoB,EAAMiD,OAuB7BwD,QAASzG,EAAMgD,KAAI,SAAC0D,EAAQzD,GAAT,OAAmBA,EAAQ,MAAQyD,EAAO5P,SAC7D6P,YAAa,SAACC,GAAD,OACX,cAACpF,GAAA,EAAD,2BAAeoF,GAAf,IAAuB7E,MAAM,eAAeqC,OAAO,SAAS/G,QAAQ,qB,SCb/DwJ,OAlCf,SAAqBzK,GAmBnB,OACE,eAAC,KAAO0K,IAAR,CACEC,QAAQ,MACRC,QAAQ,KACRC,KAAK,MACLC,SArBiB,CACnB3E,GAAI,CACF4E,QAAS,EACTC,MAAO,GAETC,IAAK,CACHF,QAAS,EACTC,MAAO,KAePE,WAXoB,CACtBC,SAAU,GACV9F,KAAM,aAIN,UAOE,cAAC,GAAD,IACA,cAAC+F,GAAD,IACA,cAAC,GAAD,Q,2MCKA7N,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmM,UAAW,CACT1C,WAAYzJ,EAAMW,QAAQ,GAC1BY,UAAWvB,EAAMW,QAAQ,IAE3B8D,MAAM,aACJgF,WAAYzJ,EAAMW,QAAQ,IAC1B+I,YAAa1J,EAAMW,QAAQ,IAC3BY,UAAWvB,EAAMW,QAAQ,GACzBa,aAAcxB,EAAMW,QAAQ,GAC5BD,QAASV,EAAMW,QAAQ,GACvBiN,UAAW,OACXC,WAAY,SACZ,MAAO,CACLpM,eAAgB,SAEjBzB,EAAME,YAAYwK,KAAK,MAAQ,CAC9BjB,WAAYzJ,EAAMW,QAAQ,GAC1B+I,YAAa1J,EAAMW,QAAQ,GAC3BY,UAAWvB,EAAMW,QAAQ,GACzBD,QAASV,EAAMW,QAAQ,KAG3BuJ,QAAS,CACP7I,SAAUrB,EAAMkB,WAAW2I,QAAQ,IACnC5I,WAAYjB,EAAMkB,WAAW0I,gBAE/BkE,QAAS,CACPvM,UAAWvB,EAAMW,QAAQ,IAE3BoN,aAAc,CACZrE,YAAa1J,EAAMW,QAAQ,IAE7BqN,WAAY,CACVpN,QAAS,OACTqN,WAAY,SACZ1M,UAAWvB,EAAMW,QAAQ,IAE3BuN,UAAW,CACTjN,WAAYjB,EAAMkB,WAAWC,gBAC7BE,SAAUrB,EAAMkB,WAAW2I,QAAQ,KAErCsE,eAAgB,GAGhBC,cAAe,CACbxD,SAAU,QAEZyD,OAAQ,CACNtM,UAAW,cAKTuM,GAAgB,SAACC,GACrB,IAAM9L,EAAU3C,KAEhB,OACE,gCACE,cAACqD,EAAA,EAAD,CAAYD,UAAWT,EAAQyH,QAAS1G,QAAQ,KAAKJ,UAAU,KAA/D,SACGmL,EAAatR,QAEhB,uBAAMiG,UAAWT,EAAQuL,WAAzB,UACE,cAACQ,GAAA,EAAD,CAAMtL,UAAWT,EAAQsL,aAAc7F,MAAOqG,EAAaE,WAC3D,eAACtL,EAAA,EAAD,CAAYD,UAAWT,EAAQyL,UAAW1K,QAAQ,QAAQJ,UAAU,IAApE,wBACcmL,EAAa9Q,cAG7B,cAACiR,GAAA,EAAD,CAASxL,UAAWT,EAAQqL,QAAStK,QAAQ,eA4KpCwJ,OAtKf,SAAqBzK,GACnB,IAAME,EAAU3C,KAGV9C,EADY2R,eAAVC,MACSjC,MAAM,KAAK,GAEtB3J,EAAWC,cACXkD,EAAQpD,YAAYqC,IAPA,EASYiB,IAAMC,UAAS,GAT3B,mBASnBuI,EATmB,KASNC,EATM,OAUczI,IAAMC,SAAS,MAV7B,mBAUnBiI,EAVmB,KAULQ,EAVK,OAWM1I,IAAMC,SAAS,IAXrB,mBAWnB0I,EAXmB,KAWTC,EAXS,OAYA5I,IAAMC,UAAS,GAZf,mBAYnB4I,EAZmB,KAYZC,EAZY,KAcpBvI,EAAa7D,YAAYyC,IAEzB4J,EAAmB,WACvBN,GAAe,IAGjBzI,IAAMgJ,WAAU,WACd,IA0BIjJ,EAAOW,YAAS,CAACC,KAAK,sBAAD,OAAwBhK,EAAxB,MAAgCiK,KAAMd,IAC3Db,GAAS,EACb,GAAGc,EAAKoD,OAAS,EAAG,CAElB,GADAlE,GAAS,GACJsB,EAGH,OAFAwI,SACAD,GAAS,GAGX/I,EAAOW,YAAS,CAACC,KAAK,wBAAD,OAA0BhK,EAA1B,MAAkCiK,KAAMd,IAG/D,GAAGC,EAAKoD,OAAS,EACf4F,IACAD,GAAS,OACJ,CAEA7J,GACHtC,EAAS+B,GAAkBqB,EAAK,KAElC,IAAIkJ,EAAOlJ,EAAK,GAChB2I,EAAgBO,GA/CS,SAACA,GAC1BC,KAAMC,IAAItS,EAAiBuG,EAAKzE,eAAe,IAAIsQ,EAAKG,OACrDC,MAAK,SAACC,GACL,IAAIvJ,EAAOuJ,EAASC,KAEE,WAAlBN,EAAKb,WAGPrI,EAFayJ,KAAOC,IAAIC,QAAQ3J,EAAMQ,GAEzBoJ,SAASH,KAAOI,IAAIC,OAGnC,IAAIC,EAAQ/J,EAAKuG,MAAM,MAEvBwD,EAAMC,OAAO,EAAE,GACf,IAAIC,EAAUF,EAAMG,KAAK,MAEzBrB,EAAYoB,MAEbE,OAAM,SAACC,GACNrB,GAAS,MAEVsB,SAAQ,WACPrB,OAiCFsB,CAAmBpB,GAGnBH,GAAS,MAEZ,CAACvI,IAgBJ,IAdwB+J,EAclBC,EAAY,CAChBC,KAAM,gBAAE7I,EAAF,EAAEA,MAAF,OAAa,cAAC,KAAD,CAAK8I,OAAK,EAACD,KAAM7I,KACpC+I,WAAY,gBAAE/I,EAAF,EAAEA,MAAF,OAAa,cAAC,KAAD,CAAK6I,KAAM7I,KACpCgJ,KAAM,YAAwB,IAAtBC,EAAqB,EAArBA,SAAUjJ,EAAW,EAAXA,MAChB,OAAO,cAAC,KAAD,CAAmBkJ,eAAa,EAACC,WAAS,EAACC,MAAOC,KAASJ,SAAUA,EAAUnG,SAAU9C,KAElGsJ,MAXF,SAAuB/O,GACrB,OAAO,+CAASA,GAAT,IAAgBW,UAAWT,EAAQ2L,mBA2B5C,OACES,EAAc,cAAC0C,GAAA,EAAD,CAAgB/N,QAAQ,kBACtC,eAAC,KAAOyJ,IAAR,CACEC,QAAQ,MACRC,QAAQ,KACRC,KAAK,MACLC,SApBiB,CACnB3E,GAAI,CACF8I,EAAG,GAELhE,IAAK,CACHgE,EAAG,UAgBH/D,WAZoB,CACtBC,SAAU,GACV9F,KAAM,aAKN,UAQE,qBAAK1E,UAAWT,EAAQ0J,UAAxB,SACE,cAACrI,EAAA,EAAD,CAAS7G,MAAM,UAAU8G,aAAW,UAAUC,OAAK,EAAnD,SACE,cAAC,IAAD,CAAMV,GAAG,IAAT,SACE,cAACY,EAAA,EAAD,CAAY9C,MAAM,UAAU2C,aAAW,UAAvC,SACE,cAAC,KAAD,YAMR,cAAC0N,GAAA,EAAD,CAAOvO,UAAWT,EAAQgC,MAAOiN,UAAW,EAA5C,SAEKxC,EACCL,EAAc,cAAC,GAAD,CAAeN,aAAcA,IAE3C,gCACE,cAACpL,EAAA,EAAD,CAAYD,UAAWT,EAAQyH,QAAS1G,QAAQ,KAAKJ,UAAU,KAA/D,SACGmL,EAAatR,QAEhB,uBAAMiG,UAAWT,EAAQuL,WAAzB,UACE,cAACQ,GAAA,EAAD,CAAMtL,UAAWT,EAAQsL,aAAc7F,MAAOqG,EAAaE,WAC3D,eAACtL,EAAA,EAAD,CAAYD,UAAWT,EAAQyL,UAAW1K,QAAQ,QAAQJ,UAAU,IAApE,wBACcmL,EAAa9Q,cAG7B,cAACiR,GAAA,EAAD,CAASxL,UAAWT,EAAQqL,QAAStK,QAAQ,WAC7C,cAAC,KAAD,CAAeN,UAAWT,EAAQ0L,eAAgBwD,QAAS,CAACd,MAAOD,UAAWA,EAA9E,SACG5B,QA1ES2B,EA2DS,2FA1D/B,gCACE,cAACxN,EAAA,EAAD,CAAYmH,cAAY,EAAC9G,QAAQ,KAAKJ,UAAU,KAAhD,SACGuN,IAEH,cAACiB,GAAA,EAAD,CAAUR,MAAO,CAACS,aAAc,GAAIrO,QAAQ,OAAOpD,MAAO,OAAQ0B,OAAQ,mB,UCrL/DgQ,OAtBjB,SAAmCvP,GAC/B,OACE,eAAC4I,GAAA,EAAD,CAAK4G,SAAS,WAAWnR,QAAQ,cAAjC,UACE,cAACoR,GAAA,EAAD,aAAkBxO,QAAQ,eAAkBjB,IAC5C,cAAC4I,GAAA,EAAD,CACE8G,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPL,SAAS,WACTnR,QAAQ,OACRqN,WAAW,SACXoE,eAAe,SARjB,SAUE,cAAClP,EAAA,EAAD,CAAYK,QAAQ,UAAUJ,UAAU,MAAMhC,MAAM,gBAApD,mBAAwEkR,KAAKC,MAC3EhQ,EAAMyF,OADR,a,8BCwBJlI,I,mCAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuH,KAAM,CACJ3G,QAAS,QAEX4R,QAAS,CACP/R,SAAU,EACVG,QAAS,OACTC,cAAe,OAEjB4R,gBAAiB,CACfhS,SAAU,EACVG,QAAS,OACTC,cAAe,SACf0J,OAAQvK,EAAMW,QAAQ,IAGxB+R,YAAa,CACX3R,KAAM,EACNe,OAAQ,QACRiE,SAAU,UAEZoG,UAAW,CACT5K,UAAWvB,EAAMW,QAAQ,GACzB8I,WAAYzJ,EAAMW,QAAQ,GAC1B+I,YAAa1J,EAAMW,QAAQ,IAE7BoJ,kBAAmB,CACjBxI,UAAWvB,EAAMW,QAAQ,IAE3BuJ,QAAS,CACPjJ,WAAYjB,EAAMkB,WAAW0I,eAC7BvI,SAAUrB,EAAMkB,WAAW2I,QAAQ,UAwFxB8I,OAnFf,SAA0BpQ,GAAQ,IAAD,EACS8D,IAAMC,UAAS,GADxB,mBACxBsM,EADwB,KACVC,EADU,OAECxM,IAAMC,SAAS,IAFhB,mBAExBwM,EAFwB,KAEdC,EAFc,OAGH1M,IAAMC,UAAS,GAHZ,mBAGxB0M,EAHwB,KAGhBC,EAHgB,KAKzBC,EAAaC,aAAe,2BAC7B1P,EAAKxE,cADuB,IAE/BoD,QAAQ,eACHoB,EAAKjE,UAINiD,EAAU3C,KAEVsT,EAAMC,eAENrQ,EAAWC,cA2BjB,OAzBAoD,IAAMgJ,WAAU,WACdE,KAAMC,IAAItS,EAAiBuG,EAAK1E,WAAY,CAC1CuU,mBAAqB,SAAAC,GACnB,GAAKA,EAAcC,iBAAnB,CACA,IAAIC,EAAmBnB,KAAKC,MAA8B,IAAvBgB,EAAcG,OAAgBH,EAAcI,OAC/EZ,EAAYU,OAGb/D,MAAK,SAAUC,GACoB,IAA/BA,EAASC,KAAKzJ,MAAMqD,OACrByJ,GAAU,IAEVtD,EAASC,KAAKzJ,MAAMe,KAAK5J,GACzB0F,EAASmC,GAAgBwK,EAASC,OAClCmD,EAAY,KACZF,GAAgB,OAGnBtC,OAAM,SAAUqD,GACfC,QAAQC,IAAIF,QAEf,IAKD,cAACG,GAAA,EAAD,CAAe/T,MAAOkT,EAAtB,SACE,sBAAKhQ,UAAWT,EAAQ8E,KAAxB,UACE,cAACyM,GAAA,EAAD,CAAUC,WAAS,EAAC1P,KAAMqO,EAA1B,SACE,cAAC,GAAD,CAA2B5K,MAAO8K,MAEpC,cAAC,EAAD,IAEEF,EAAgB,wBACZI,EACE,sBAAK9P,UAAWT,EAAQgQ,gBAAxB,UACE,cAACtP,EAAA,EAAD,CAAYD,UAAWT,EAAQyH,QAAS1G,QAAQ,KAAKJ,UAAU,KAA/D,yDAGA,cAACwO,GAAA,EAAD,CAAU1O,UAAWT,EAAQsH,kBAAmBvG,QAAQ,OAAOpD,MAAO,OAAQ0B,OAAQ,SAGxF,uBAAMoB,UAAWT,EAAQ+P,QAAzB,UACI,qBAAKtP,UAAWT,EAAQiQ,YAAxB,SACE,cAAC,KAAD,CAAiBwB,iBAAe,EAAhC,SACE,eAAC,KAAD,CAAQC,SAAUf,EAAlB,UACE,cAAC,KAAD,CAAOpM,KAAK,eAAZ,SACE,cAACoN,GAAD,MAEF,cAAC,KAAD,CAAOpN,KAAK,IAAZ,SACE,cAAC,GAAD,QALwBoM,EAAIiB,cAUpC,cAAC,GAAD,aClJLC,eAAe,CAC5BC,QAAS,CACPrP,UAAWsP,GACX1P,YAAa2P,GACbnW,aAAcA,EACdmH,YAAaA,MCDjBiP,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAQC,SAAUC,QAAlB,SACE,cAAC,GAAD,QAGJlS,SAASmS,eAAe,W","file":"static/js/main.c5261bd4.chunk.js","sourcesContent":["const parsePostUrl = (id, title) => {\n  return '/post-'+id+'-'+title;\n}\n\nconst nonCachedRequest = (url) => {\n  return url+'?timestamp='+new Date().getTime();\n  // return url;\n}\n\nfunction sortPosts(a, b) {\n  return new Date(b.created).getTime() - new Date(a.created).getTime();\n}\n\nexport { parsePostUrl, nonCachedRequest, sortPosts }\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const sidebarSlice = createSlice({\n  name: 'sidebarState',\n  initialState: {\n    mobileVisible: false\n  },\n  reducers: {\n    updateVisiblity: (state, action) => {\n      state.mobileVisible = action.payload;\n    },\n\n  }\n});\n\nexport const { updateVisiblity } = sidebarSlice.actions;\nexport const selectVisiblity = (state) => state.sidebarState.mobileVisible;\n\nexport default sidebarSlice.reducer;","const blogConfig = {\n    blogRoot: \"/Blog\",\n    blogName: \"M's Blog\",\n    blogDescription: \"This blog deals with my research progress at I.I.T Mandi M.S program, expect content related to compilers, react, books, etc...\",\n    authorName: \"Meetesh K Mehta\",\n    authorEmail: \"meeteshmehta4@gmail.com\",\n    authorImage: \"/Blog/blog-pic.jpg\",\n    authorDescription: \"I am interested in music, long walks and computers. I don't really use any social media, better to drop me ten emails than to get an answer elsewhere.\",\n    URI_POSTS: \"/Blog/posts/posts.json\",\n    URI_POST_FILES: \"/Blog/posts\",\n    sidebarTheme: {\n        blogLeftDrawerBackground: \"#000\",\n        blogLogo: \"#fff\",\n        blogDescription: \"#fafafa\",\n        authorName: \"#fefefe\",\n        authorDescription: \"#e0e0e0\",\n        textTitle: \"#a1a1a1\",\n        textDesc: \"#e0e0e0\",\n        textDate: \"#a1a1a1\",\n    },\n    // THEME\n    dark: {\n\n    },\n    light: {\n        primary: {\n            light: \"#7986cb\",\n            main: \"#3f51b5\",\n            dark: \"#303f9f\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            light: \"#ff4081\",\n            main: \"#f50057\",\n            dark: \"#c51162\",\n            contrastText: \"#fff\",\n        }\n    }\n\n}\n\nexport default blogConfig;\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MailOutline from '@material-ui/icons/MailOutline';\n\nimport SimpleLink from '@material-ui/core/Link';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisiblity, updateVisiblity } from '../features/sidebarState';\n\n\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport BLOG from '../config';\n\nconst leftDrawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    [theme.breakpoints.up('md')]: {\n      width: leftDrawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: leftDrawerWidth,\n  },\n\n  leftSide: {\n    backgroundColor: theme.blogLeftDrawerBackground,\n    flexGrow: 1,\n    padding: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  leftTop: {\n    flex: 1,\n  },\n  siteName: {\n    fontWeight: theme.typography.fontWeightLight,\n    color: theme.blogLogo,\n    fontSize: \"3rem\",\n    cursor: \"pointer\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    textDecoration: \"none\"\n  },\n  siteDescription: {\n    ...theme.typography.body2,\n    color: theme.blogDescription,\n    fontSize: \"1rem\"\n  },\n  avatarContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  largeAvatar: {\n    width: leftDrawerWidth - 150,\n    height: leftDrawerWidth - 150,\n    alignSelf: \"center\",\n  },\n  authorName: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    color: theme.authorName,\n    fontWeight: theme.typography.fontWeightRegular,\n    alignSelf: \"center\",\n  },\n  authorDes: {\n    ...theme.typography.caption,\n    color: theme.authorDescription,\n    fontWeight: theme.typography.fontWeightMedium,\n    padding: theme.spacing(),\n    borderLeft: `2px solid ${theme.palette.primary.main}`\n  },\n\n}));\n\nfunction LeftSidebar(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const container = window !== undefined ? () => window().document.body : undefined;\n  const mobileOpen =  useSelector(selectVisiblity);\n  const dispatch = useDispatch();\n\n  const handleSidebarToggle = () => {\n    dispatch(updateVisiblity(!mobileOpen));\n  }\n\n  const drawer = (\n    <div className={classes.leftSide}>\n      <Typography component={Link} to=\"/\" align=\"left\" variant=\"h4\" className={classes.siteName}>\n        {BLOG.blogName}\n      </Typography>\n      <div className={classes.leftTop}>\n        <Typography paragraph className={classes.siteDescription}>\n          {BLOG.blogDescription}\n          <br/>\n          <br/>\n        </Typography>\n      </div>\n      <div>\n        <div className={classes.avatarContainer}>\n          <Avatar\n            align=\"center\"\n            alt={BLOG.authorName + \"'s picture\"}\n            src={BLOG.authorImage}\n            className={classes.largeAvatar} />\n          <Typography align=\"left\" variant=\"h6\" className={classes.authorName}>\n            {BLOG.authorName}\n          </Typography>\n          <Typography paragraph align=\"left\" className={classes.authorDes}>\n            {BLOG.authorDescription}\n          </Typography>\n          <Tooltip title={BLOG.authorEmail} aria-label=\"email\" arrow>\n            <SimpleLink href={\"mailto:\"+BLOG.authorEmail}>\n              <IconButton color=\"primary\" aria-label=\"author-email\">\n                <MailOutline />\n              </IconButton>\n            </SimpleLink>\n          </Tooltip>\n        </div>\n      </div>\n    </div>\n  );\n\n  \n\n  return (\n\n    <nav className={classes.drawer} aria-label=\"blog details\">\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleSidebarToggle}\n          classes={{\n              paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n              keepMounted: true\n          }}\n        >\n        {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n}\n\nexport default LeftSidebar;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const currentSlice = createSlice({\n  name: 'currentPost',\n  initialState: {\n    currentPost: null\n  },\n  reducers: {\n    updateCurrentPost: (state, action) => {\n      state.currentPost = action.payload;\n    },\n\n  }\n});\n\nexport const { updateCurrentPost } = currentSlice.actions;\nexport const selectCurrentPost = (state) => state.currentPost.currentPost;\n\nexport default currentSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const allPostsSlice = createSlice({\n  name: 'postsJson',\n  initialState: {\n    postsJson: {}\n  },\n  reducers: {\n    updatePostsJson: (state, action) => {\n      // console.log(\"updatePostsJson\", action.payload);\n      state.postsJson = action.payload;\n    }\n  }\n});\n\nexport const { updatePostsJson } = allPostsSlice.actions;\nexport const getPostsJson = (state) => state.postsJson.postsJson;\n\nexport default allPostsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const secretSlice = createSlice({\n  name: 'secretState',\n  initialState: {\n    secret: undefined\n  },\n  reducers: {\n    updateSecret: (state, action) => {\n      state.secret = action.payload;\n    },\n\n  }\n});\n\nexport const { updateSecret } = secretSlice.actions;\nexport const selectSecret = (state) => state.secretState.secret;\n\nexport default secretSlice.reducer;","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { sortPosts } from './helper';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AccountTree from '@material-ui/icons/AccountTree';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {JSONPath} from 'jsonpath-plus';\n\nimport TurnedInIcon from '@material-ui/icons/TurnedIn';\nimport TurnedInNotIcon from '@material-ui/icons/TurnedInNot';\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport { parsePostUrl } from './helper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport { selectSecret, updateSecret } from '../features/secretState';\nimport moment from \"moment\"\nconst BLOG = {\n  rightDrawerWidth: 300\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  rightAside: {\n    width: BLOG.rightDrawerWidth,\n    padding: theme.spacing(1),\n    paddingTop: theme.spacing(3),\n  },\n  lineageHolder: {\n    marginTop: theme.spacing(3)\n  },\n  lineageList: {\n    maxHeight: 300,\n    overflow: \"scroll\",\n    // \"&::-webkit-scrollbar-track\": {\n    //   boxShadow: `inset 0 0 6px rgba(0, 0, 0, 0.3)`,\n    // },\n    // \"&::-webkit-scrollbar-thumb\": {\n    //   backgroundColor: \"darkgrey\",\n    //   outline: `1px solid slategrey`,\n    // },\n  },\n  passButton: {\n    marginTop: 10\n  },\n  captionText: {\n    color: theme.typography.caption.color\n  }\n}));\n\nfunction RightSidebar(props) {\n  const classes = useStyles();  \n  const posts = useSelector(getPostsJson);\n  const post = useSelector(selectCurrentPost);\n\n  const [openSecrets, setOpenSecrets] = React.useState(false);\n  const [open, setOpen] = React.useState(true);\n  const [sec, setSec] = React.useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const secretPass = useSelector(selectSecret);\n  \n  function calculateLineage() {\n    if(post !== null && post !== undefined && post.lineage !== undefined) {\n      const lineageList = JSONPath({path: `$.posts[?(@.lineage === '${post.lineage}')]`, json: posts});\n      lineageList.sort(sortPosts);\n      return {list: lineageList, id: post.id, name: post.lineage};\n    } else {\n      return {};\n    }\n  }\n\n  const lineageData = calculateLineage();\n\n  let secrets = posts.secrets;\n\n  if (secrets !== undefined) {\n    // secrets.sort(function(a,b){\n    //   // Date(moment(b.created, 'DD-MM-YYYY').format())\n    //   return true;\n    // });\n    \n  }\n\n  const getSorted = (a) => {\n    let arr = [...a]\n    arr.sort(function(a,b){\n      // Date(moment(b.created, 'DD-MM-YYYY').format())\n      return moment(b.created, 'DD-MM-YYYY').toDate() - moment(a.created, 'DD-MM-YYYY').toDate()\n    });\n    // console.log(arr)\n    return arr\n  }\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const handleClickSecrets = () => {\n    setOpenSecrets(!openSecrets);\n  };\n\n  const handleSecretChange = (e) => {\n    setSec(e.target.value)\n  };\n\n  const updateSecretInStore = (e) => {\n    let s = sec\n    // setSec(\"\");\n    dispatch(updateSecret(s));\n    // updateSecret(s);\n  };\n\n  return (\n    <Hidden smDown implementation=\"css\">\n      <div className={classes.rightAside}>\n        <Card className={classes.root}>\n          <CardContent>\n            <form noValidate autoComplete=\"off\">\n              <TextField type=\"password\" autoComplete='site-key' onChange={handleSecretChange} fullWidth id=\"outlined-basic\" label=\"Know what I know?\" variant=\"outlined\" />\n              <Button onClick={updateSecretInStore} color=\"secondary\" className={classes.passButton} fullWidth variant=\"outlined\">Magic</Button>\n            </form>\n          </CardContent>\n        </Card>\n        {\n          secrets === undefined || secretPass === undefined || secretPass === \"\" ? (<br/>) : (\n            <div className={classes.lineageHolder}>\n              <ListItem button onClick={handleClickSecrets}>\n                <ListItemIcon>\n                  <AccountTree />\n                </ListItemIcon>\n                <ListItemText primary={\"Secrets\"} secondary=\"For the intended folks\" />\n                {openSecrets ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={openSecrets} timeout=\"auto\" unmountOnExit>\n                <List className={classes.lineageList} dense={false}>\n                  {\n                    getSorted(secrets).map((post, index) => {\n                      return (\n                        <ListItem key={\"lineage-\"+index} component={Link} to={parsePostUrl(post.id, post.title)} selected={post.id === lineageData.id} button>\n                          <ListItemAvatar>\n                            {\n                              post.id === lineageData.id ?\n                              <Avatar >\n                                <TurnedInIcon />\n                              </Avatar> :\n                              <Avatar >\n                                <TurnedInNotIcon />\n                              </Avatar>  \n\n                            }\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={post.description}\n                            secondary={post.created}\n                          />\n                        </ListItem>\n                      );\n                    })\n                  }                  \n                </List>\n                {\n                  secrets.length > 3 && \n                    <Typography variant=\"caption\" component=\"p\" align='center' className={classes.captionText}>\n                      Total {secrets.length} entries, scroll down for more.\n                    </Typography>\n                }\n              </Collapse>\n            </div>\n          )\n        }\n\n\n        {\n          lineageData.name === undefined ? (<br/>) : (\n            <div className={classes.lineageHolder}>\n              <ListItem button onClick={handleClick}>\n                <ListItemIcon>\n                  <AccountTree />\n                </ListItemIcon>\n                <ListItemText primary={lineageData.name} secondary=\"post lineage shows all the posts in this series.\" />\n                {open ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List className={classes.lineageList} dense={true}>\n                  {\n                    lineageData.list.map((post, index) => {\n                      return (\n                        <ListItem key={\"lineage-\"+index} component={Link} to={parsePostUrl(post.id, post.title)} selected={post.id === lineageData.id} button>\n                          <ListItemAvatar>\n                            {\n                              post.id === lineageData.id ?\n                              <Avatar >\n                                <TurnedInIcon />\n                              </Avatar> :\n                              <Avatar >\n                                <TurnedInNotIcon />\n                              </Avatar>  \n\n                            }\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={post.title}\n                            secondary={post.created}\n                          />\n                        </ListItem>\n                      );\n                    })\n                  }                  \n                </List>\n                {\n                  lineageData.list.length > 3 && \n                    <Typography variant=\"caption\" component=\"p\" align='center' className={classes.captionText}>\n                      Total {lineageData.list.length} entries, scroll down for more.\n                    </Typography>\n                }\n              </Collapse>\n            </div>\n          )\n        }\n        \n          \n        \n\n                  \n      </div>\n    </Hidden>\n  );\n}\n\nexport default RightSidebar;\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useSelector } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\n\nimport { parsePostUrl } from './helper';\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginTop: theme.spacing(2),\n  },\n  date: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(12),\n    color: theme.textDate,\n    marginTop: theme.spacing(2)\n  },\n  postContainer: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  skeletonContainer: {\n    marginTop: theme.spacing(2),\n  },\n  cardPostTitle: {\n    fontWeight: theme.typography.fontWeightBold\n  },\n  cardPostDesc: {\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(13)\n  },\n  heading: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(25)\n  }\n}));\n\n\n\nfunction LatestPost(props) {\n  const classes = useStyles();\n  let post = useSelector(selectCurrentPost);\n  const postLatest = useSelector(getPostsJson).posts[0];\n  if (post === null) post = postLatest;\n\n  return(\n    <div className={classes.root}>\n      <div>\n        <Typography className={classes.heading} variant=\"h6\" component=\"h2\">\n          Read Next\n        </Typography>\n        <Card className={classes.postContainer}>\n          <CardActionArea component={Link} to={parsePostUrl(post.id, post.title)}>\n            <CardContent>\n              <Typography className={classes.cardPostTitle} gutterBottom variant=\"h5\" component=\"h2\">\n                {post.title}\n              </Typography>\n              <Typography className={classes.cardPostDesc} variant=\"body2\" component=\"p\">\n                {post.description} \n              </Typography>\n              <Typography className={classes.date}>\n                {post.created}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default LatestPost;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport { parsePostUrl } from './helper';\n\n\nconst useStyles = makeStyles((theme) => ({\n  date: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(12),\n    color: theme.textDate,\n    marginTop: theme.spacing(2),\n  },\n  postContainer: {\n    margin: theme.spacing(1),\n  },\n  cardPostTitle: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(16),\n    overflow: \"hidden\",\n  },\n  cardPostDesc: {\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(16)\n  }\n  \n}));\n\nfunction PostCard(props) {\n  const classes = useStyles();\n  const post = props.post;\n  return(\n    <Card className={classes.postContainer}>\n      <CardActionArea className={classes.clickableArea} component={Link} to={parsePostUrl(post.id, post.title)}>\n        <CardContent>\n          <Typography className={classes.cardPostTitle} gutterBottom variant=\"h5\" component=\"h2\">\n            {post.title}\n          </Typography>\n          <Typography className={classes.cardPostDesc} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {post.description}\n          </Typography>\n          <Typography className={classes.date}>\n            {post.created}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nexport default PostCard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {JSONPath} from 'jsonpath-plus';\nimport PostCard from './PostCard';\n\nimport { useSelector } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    overflow: \"hidden\",\n    [theme.breakpoints.down('md')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(2),\n    },\n  },\n  tabContainer: {\n    [theme.breakpoints.down('md')]: {\n      maxWidth: \"60vw\"\n    },\n    maxWidth: \"40vw\"\n  }\n  \n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction PostsContainer(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const blogData = useSelector(getPostsJson);\n\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return(\n    <div className={classes.root}>\n      <div>\n          <div className={classes.tabContainer}>\n            <Tabs\n              variant=\"scrollable\"\n              scrollButtons=\"on\"\n              value={value}\n              onChange={handleChange}\n              aria-label=\"lineage selector\">\n              {\n                blogData.categories.map((label, index) => (\n                  <Tab key={index+\"tab-section\"} label={label} {...a11yProps(index)} />\n                ))\n              }\n            </Tabs>\n          </div>\n        {\n          blogData.categories.map((label, index) => {\n            return (\n              <TabPanel value={value} index={index} key={index+\"tab\"}>\n                <Grid container spacing={0}>\n                  {\n                    JSONPath({path: `$.posts[?(@.category === '${label}')]`, json: blogData}).map((post) => (\n                      <Grid item xs={12} sm={4} key={post.id}>\n                        <PostCard post={post}/>\n                      </Grid>\n                    ))\n                  }\n                </Grid>\n              </TabPanel>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PostsContainer;\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPostsJson } from '../features/allPostsSlice';\nimport { updateCurrentPost } from '../features/currentPostSlice';\nimport { selectVisiblity, updateVisiblity } from '../features/sidebarState';\n\nconst useStyles = makeStyles((theme) => ({\n  actionBar: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3)\n  }\n}));\n\n\nfunction SearchableActionBar(props) {\n  const classes = useStyles();\n\n  const { posts } = useSelector(getPostsJson);\n  const toggle =  useSelector(selectVisiblity);\n  const dispatch = useDispatch();\n\n  const handleUpdate = (event, newValue) => {\n    if(newValue === null) return;\n    let index = parseInt(newValue.split(\" >\")[0]);\n    dispatch(updateCurrentPost(posts[index]));\n  }\n\n  \n  const handleSidebarToggle = () => {\n    dispatch(updateVisiblity(!toggle));\n  }\n\n  return(\n    <div className={classes.actionBar}>\n      <Hidden mdUp implementation=\"css\">\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={handleSidebarToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n      </Hidden>\n      <Autocomplete\n        freeSolo\n        onChange={handleUpdate}          \n        options={posts.map((option, index) => index + ' > ' + option.title)}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Search Posts\" margin=\"normal\" variant=\"outlined\" />\n        )}\n      />\n    </div>\n  );\n}\n\nexport default SearchableActionBar;\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SelectedPost from './SelectedPost';\nimport PostsContainer from './PostsContainer';\nimport SearchableActionBar from './SearchableActionBar';\n\nimport {\n  motion\n} from 'framer-motion';\n\n\nfunction HomeContent(props) {\n\n  \n  const pageVariants = {\n    in: {\n      opacity: 1,\n      scale: 1,\n    },\n    out: {\n      opacity: 0,\n      scale: 0.8,\n    }\n  }\n\n  const pageTransitions = {\n    duration: .3,\n    type: \"backInOut\",\n  }\n\n  return(\n    <motion.div\n      initial=\"out\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <SearchableActionBar />\n      <SelectedPost />      \n      <PostsContainer />\n    </motion.div>\n  );\n}\n\nexport default HomeContent;\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {JSONPath} from 'jsonpath-plus';\nimport ReactMarkdown from 'react-markdown';\nimport Tex from '@matejmazur/react-katex'\nimport math from 'remark-math'\nimport 'katex/dist/katex.min.css'\nimport Divider from '@material-ui/core/Divider';\n\nimport {\n  useParams\n} from \"react-router-dom\";\n\nimport axios from 'axios';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport { xonokai } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport Chip from '@material-ui/core/Chip';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport {\n  motion\n} from 'framer-motion';\nimport BLOG from '../config';\nimport { nonCachedRequest } from './helper';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\nimport { selectSecret } from '../features/secretState';\n\n\nimport Crypto from \"crypto-js\";\n\nconst useStyles = makeStyles((theme) => ({\n  actionBar: {\n    marginLeft: theme.spacing(3),\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    marginLeft: theme.spacing(10),\n    marginRight: theme.spacing(10),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(6),\n    minHeight: '50vh',\n    fontFamily: 'Roboto',\n    \"& a\": {\n      textDecoration: \"none\",\n    },\n    [theme.breakpoints.down('md')]: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n      marginTop: theme.spacing(1),\n      padding: theme.spacing(2),\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(40),\n    fontWeight: theme.typography.fontWeightBold\n  },\n  divider: {\n    marginTop: theme.spacing(4),\n  },\n  categoryName: {\n    marginRight: theme.spacing(1),\n  },\n  dateHolder: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2)\n  },\n  dateStyle: {\n    fontWeight: theme.typography.fontWeightLight,\n    fontSize: theme.typography.pxToRem(13)\n  },\n  markdownHolder: {\n    // padding: theme.spacing(2)\n  },\n  markdownImage: {\n    maxWidth: '100%'\n  },\n  loader: {\n    alignSelf: 'center'\n  }\n}));\n\n\nconst LoadingHeader = (postMetaData) => {\n  const classes = useStyles();\n\n  return(\n    <div>\n      <Typography className={classes.heading} variant=\"h2\" component=\"h1\">\n        {postMetaData.title}\n      </Typography>\n      <span className={classes.dateHolder}>\n        <Chip className={classes.categoryName} label={postMetaData.category} />\n        <Typography className={classes.dateStyle} variant=\"body2\" component=\"p\">\n          created on {postMetaData.created}\n        </Typography>\n      </span>\n      <Divider className={classes.divider} variant=\"middle\" />\n    </div>\n  );\n\n}\n\nfunction HomeContent(props) {\n  const classes = useStyles();\n  \n  const { idRaw } = useParams();\n  const id = idRaw.split('-')[0];\n\n  const dispatch = useDispatch();\n  const posts = useSelector(getPostsJson);\n  \n  const [loadingPost, setLoadingPost] = React.useState(true);\n  const [postMetaData, setPostMetaData] = React.useState(null);\n  const [postData, setPostData] = React.useState(\"\");\n  const [found, setFound] = React.useState(false);\n\n  const secretPass = useSelector(selectSecret);\n\n  const smoothLoadingEnd = () => {\n    setLoadingPost(false);\n  }\n\n  React.useEffect(() => {\n    const renderPostFromLink = (meta) => {\n      axios.get(nonCachedRequest(BLOG.URI_POST_FILES+'/'+meta.link, {}))\n        .then((response) => {\n          let post = response.data\n          \n          if (meta.category === \"Secret\") {\n            var bytes  = Crypto.AES.decrypt(post, secretPass);\n            // If the encoding fails, we know for sure it was a wrong password, hence the catch case will set the not found flag to true\n            post = bytes.toString(Crypto.enc.Utf8);\n          }\n\n          var lines = post.split('\\n');\n          // get rid of the metadata comments\n          lines.splice(0,5);\n          var newtext = lines.join('\\n');\n\n          setPostData(newtext);\n        })\n        .catch((err) => {\n          setFound(false);\n        })\n        .finally(() => {\n          smoothLoadingEnd();\n        })\n    }\n\n    let post = JSONPath({path: `$.posts[?(@.id === ${id})]`, json: posts})\n    let secret = false;\n    if(post.length < 1) {\n      secret = true;\n      if (!secretPass) {\n        smoothLoadingEnd();\n        setFound(false);\n        return;\n      }\n      post = JSONPath({path: `$.secrets[?(@.id === ${id})]`, json: posts})\n    }\n\n    if(post.length < 1) {\n      smoothLoadingEnd();\n      setFound(false);\n    } else {\n      // console.log(post[0])\n      if (!secret) {\n        dispatch(updateCurrentPost(post[0]));\n      }\n      let meta = post[0]\n      setPostMetaData(meta);\n      \n      // // during debugging, simulate network load time\n      // setTimeout(function() {\n        //   renderPostFromLink(post[0].link);\n        //   //your code to be executed after 1 second\n        // }, 1500);\n        \n        renderPostFromLink(meta);\n        \n        \n        setFound(true);\n    }\n  }, [secretPass]);\n\n  const renderSkeleton = (msg) => (\n    <div>\n      <Typography gutterBottom variant=\"h6\" component=\"h2\">\n        {msg}\n      </Typography>\n      <Skeleton style={{borderRadius: 5}} variant=\"rect\" width={\"100%\"} height={\"60vh\"} />\n    </div>\n  )\n\n  function ImageRenderer(props) {\n    return <img {...props} className={classes.markdownImage} />\n  }\n  \n\n  const renderers = {\n    math: ({value}) => <Tex block math={value} />,\n    inlineMath: ({value}) => <Tex math={value} />,\n    code: ({language, value}) => {\n      return <SyntaxHighlighter wrapLongLines wrapLines style={xonokai} language={language} children={value} />\n    },\n    image: ImageRenderer\n  }\n\n  const pageVariants = {\n    in: {\n      y: 0\n    },\n    out: {\n      y: \"100vh\"\n    }\n  }\n\n  const pageTransitions = {\n    duration: .5,\n    type: \"backInOut\",\n  }\n\n  return(\n    loadingPost ? <LinearProgress variant=\"indeterminate\" /> :\n    <motion.div\n      initial=\"out\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n\n      <div className={classes.actionBar}>\n        <Tooltip title=\"Go Back\" aria-label=\"go-home\" arrow>\n          <Link to=\"/\">\n            <IconButton color=\"primary\" aria-label=\"go-home\">\n              <ArrowBack />\n            </IconButton>\n          </Link>\n        </Tooltip>\n      </div>  \n\n      <Paper className={classes.paper} elevation={3}>\n        {\n          !found ? (renderSkeleton(\"Post not found, please drop an email so I can have a look at this 👻 Thank you\")) : \n            loadingPost ? <LoadingHeader postMetaData={postMetaData} /> :\n          \n            <div>\n              <Typography className={classes.heading} variant=\"h2\" component=\"h1\">\n                {postMetaData.title}\n              </Typography>\n              <span className={classes.dateHolder}>\n                <Chip className={classes.categoryName} label={postMetaData.category} />\n                <Typography className={classes.dateStyle} variant=\"body2\" component=\"p\">\n                  created on {postMetaData.created}\n                </Typography>\n              </span>\n              <Divider className={classes.divider} variant=\"middle\" />\n              <ReactMarkdown className={classes.markdownHolder} plugins={[math]} renderers={renderers}>\n                {postData}\n              </ReactMarkdown>\n            </div>\n        }\n      </Paper>\n    </motion.div>\n  );\n}\n\nexport default HomeContent;\n","import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nfunction CircularProgressWithLabel(props) {\n    return (\n      <Box position=\"relative\" display=\"inline-flex\">\n        <CircularProgress variant=\"determinate\" {...props} />\n        <Box\n          top={0}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n            props.value,\n          )}%`}</Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  export default CircularProgressWithLabel;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { nonCachedRequest, sortPosts } from './components/helper';\nimport LeftSidebar from './components/LeftSidebar';\nimport RightSidebar from './components/RightSidebar';\nimport HomeContent from './components/HomeContent';\nimport PostPage from './components/PostPage';\nimport CircularProgressWithLabel from './components/CircularProgressWithLabel';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport BLOG from './config';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport axios from 'axios';\n\nimport { updatePostsJson } from './features/allPostsSlice';\nimport { useDispatch } from 'react-redux';\n\nimport Backdrop from '@material-ui/core/Backdrop';\n\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\n\nimport {\n  AnimatePresence\n} from 'framer-motion';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  noPostContainer: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: theme.spacing(3),\n\n  },\n  mainContent: {\n    flex: 1,\n    height: \"100vh\",\n    overflow: \"scroll\",\n  },\n  actionBar: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3)\n  },\n  skeletonContainer: {\n    marginTop: theme.spacing(2),\n  },\n  heading: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(25)\n  }\n\n}));\n\nfunction ResponsiveDrawer(props) {\n  const [loadingPosts, setLoadingPosts] = React.useState(true);\n  const [progress, setProgress] = React.useState(50);\n  const [noPost, setNoPost] = React.useState(false);\n\n  const lightTheme = createMuiTheme({\n    ...BLOG.sidebarTheme,\n    palette: {\n      ...BLOG.light\n    }\n  })\n\n  const classes = useStyles();\n\n  const loc = useLocation();\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    axios.get(nonCachedRequest(BLOG.URI_POSTS), {\n      onDownloadProgress : progressEvent => {\n        if (!progressEvent.lengthComputable) return;\n        let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n        setProgress(percentCompleted);\n      }\n    })\n      .then(function (response) {\n        if(response.data.posts.length === 0) {\n          setNoPost(true);\n        } else {\n          response.data.posts.sort(sortPosts);\n          dispatch(updatePostsJson(response.data)); // put global blog data in redux store\n          setProgress(100);\n          setLoadingPosts(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }, []); // ensuring only one global state update per session\n\n\n\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <div className={classes.root}>\n        <Backdrop invisible open={loadingPosts}>\n          <CircularProgressWithLabel value={progress} />\n        </Backdrop>\n        <LeftSidebar />\n        {\n          loadingPosts ? (<div/>) : (\n              noPost ? (\n                <div className={classes.noPostContainer}>\n                  <Typography className={classes.heading} variant=\"h6\" component=\"h2\">\n                    Blog Under Maintenance, check back later...\n                  </Typography>\n                  <Skeleton className={classes.skeletonContainer} variant=\"rect\" width={\"100%\"} height={150} />\n                </div>\n              ) : (\n                <main className={classes.content}>\n                    <div className={classes.mainContent}>\n                      <AnimatePresence exitBeforeEnter>\n                        <Switch location={loc} key={loc.pathname}>\n                          <Route path=\"/post-:idRaw\">\n                            <PostPage />\n                          </Route>\n                          <Route path=\"/\">\n                            <HomeContent />\n                          </Route>\n                        </Switch>\n                      </AnimatePresence>\n                    </div>\n                    <RightSidebar />\n                </main>\n              )\n          )\n        }\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default ResponsiveDrawer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport postsJsonReducer from './features/allPostsSlice';\nimport currentSliceReducer from './features/currentPostSlice';\nimport sidebarState from './features/sidebarState';\nimport secretState from './features/secretState';\n\nexport default configureStore({\n  reducer: {\n    postsJson: postsJsonReducer,\n    currentPost: currentSliceReducer,\n    sidebarState: sidebarState,\n    secretState: secretState\n  }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}