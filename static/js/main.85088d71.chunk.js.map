{"version":3,"sources":["components/helper.js","features/sidebarState.js","config.js","components/LeftSidebar.js","features/currentPostSlice.js","features/allPostsSlice.js","components/RightSidebar.js","components/SelectedPost.js","components/PostCard.js","components/PostsContainer.js","components/SearchableActionBar.js","components/HomeContent.js","components/PostPage.js","components/CircularProgressWithLabel.js","App.js","store.js","index.js"],"names":["parsePostUrl","id","title","nonCachedRequest","url","Date","getTime","sortPosts","a","b","created","sidebarSlice","createSlice","name","initialState","mobileVisible","reducers","updateVisiblity","state","action","payload","actions","selectVisiblity","sidebarState","blogConfig","blogRoot","blogName","blogDescription","authorName","authorEmail","authorImage","authorDescription","URI_POSTS","URI_POST_FILES","sidebarTheme","blogLeftDrawerBackground","blogLogo","textTitle","textDesc","textDate","dark","light","primary","main","contrastText","secondary","leftDrawerWidth","useStyles","makeStyles","theme","drawer","breakpoints","up","width","flexShrink","drawerPaper","leftSide","backgroundColor","flexGrow","padding","spacing","display","flexDirection","leftTop","flex","siteName","fontWeight","typography","fontWeightLight","color","fontSize","cursor","marginTop","marginBottom","textDecoration","siteDescription","body2","avatarContainer","largeAvatar","height","alignSelf","fontWeightRegular","authorDes","caption","fontWeightMedium","borderLeft","palette","LeftSidebar","props","window","classes","container","undefined","document","body","mobileOpen","useSelector","dispatch","useDispatch","className","Typography","component","Link","to","align","variant","BLOG","paragraph","Avatar","alt","src","Tooltip","aria-label","arrow","href","IconButton","Hidden","smUp","implementation","Drawer","open","onClose","paper","ModalProps","keepMounted","smDown","currentSlice","currentPost","updateCurrentPost","selectCurrentPost","allPostsSlice","postsJson","updatePostsJson","getPostsJson","rightAside","paddingTop","lineageHolder","lineageList","maxHeight","overflow","RightSidebar","posts","post","React","useState","setOpen","lineageData","lineage","JSONPath","path","json","sort","list","calculateLineage","Card","root","CardContent","gutterBottom","ListItem","button","onClick","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","List","dense","map","index","selected","ListItemAvatar","marginLeft","marginRight","date","fontWeightBold","pxToRem","postContainer","skeletonContainer","cardPostTitle","cardPostDesc","heading","LatestPost","postLatest","CardActionArea","description","margin","PostCard","clickableArea","down","tabContainer","maxWidth","TabPanel","children","value","other","role","hidden","aria-labelledby","Box","p","PostsContainer","setValue","blogData","Tabs","scrollButtons","onChange","event","newValue","categories","label","Tab","a11yProps","Grid","item","xs","sm","actionBar","SearchableActionBar","toggle","mdUp","edge","Autocomplete","freeSolo","parseInt","split","options","option","renderInput","params","TextField","HomeContent","div","initial","animate","exit","variants","opacity","scale","out","transition","duration","type","SelectedPost","minHeight","fontFamily","divider","categoryName","dateHolder","alignItems","dateStyle","markdownHolder","markdownImage","loader","LoadingHeader","postMetaData","Chip","category","Divider","useParams","idRaw","loadingPost","setLoadingPost","setPostMetaData","postData","setPostData","found","setFound","smoothLoadingEnd","useEffect","link","length","axios","get","then","response","lines","data","splice","newtext","join","catch","err","finally","msg","renderers","math","block","inlineMath","code","language","wrapLongLines","wrapLines","style","xonokai","image","LinearProgress","y","Paper","elevation","plugins","Skeleton","borderRadius","CircularProgressWithLabel","position","CircularProgress","top","left","bottom","right","justifyContent","Math","round","content","noPostContainer","mainContent","ResponsiveDrawer","loadingPosts","setLoadingPosts","progress","setProgress","noPost","setNoPost","lightTheme","createMuiTheme","loc","useLocation","onDownloadProgress","progressEvent","lengthComputable","percentCompleted","loaded","total","error","console","log","ThemeProvider","Backdrop","invisible","exitBeforeEnter","location","PostPage","pathname","configureStore","reducer","postsJsonReducer","currentSliceReducer","ReactDOM","render","store","basename","process","getElementById"],"mappings":"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","file":"static/js/main.85088d71.chunk.js","sourcesContent":["const parsePostUrl = (id, title) => {\n  return '/post-'+id+'-'+title;\n}\n\nconst nonCachedRequest = (url) => {\n  return url+'?timestamp='+new Date().getTime();\n  // return url;\n}\n\nfunction sortPosts(a, b) {\n  return new Date(b.created).getTime() - new Date(a.created).getTime();\n}\n\nexport { parsePostUrl, nonCachedRequest, sortPosts }\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const sidebarSlice = createSlice({\n  name: 'sidebarState',\n  initialState: {\n    mobileVisible: false\n  },\n  reducers: {\n    updateVisiblity: (state, action) => {\n      state.mobileVisible = action.payload;\n    },\n\n  }\n});\n\nexport const { updateVisiblity } = sidebarSlice.actions;\nexport const selectVisiblity = (state) => state.sidebarState.mobileVisible;\n\nexport default sidebarSlice.reducer;","const blogConfig = {\n    blogRoot: \"/Blog\",\n    blogName: \"M's Blog\",\n    blogDescription: \"This blog deals with my research progress at I.I.T Mandi M.S program, expect content related to compilers, react, books, etc...\",\n    authorName: \"Meetesh K Mehta\",\n    authorEmail: \"meeteshmehta4@gmail.com\",\n    authorImage: \"/Blog/blog-pic.jpg\",\n    authorDescription: \"I am interested in music, long walks and computers. I don't really use any social media, better to drop me ten emails than to get an answer elsewhere.\",\n    URI_POSTS: \"/Blog/posts/posts.json\",\n    URI_POST_FILES: \"/Blog/posts\",\n    sidebarTheme: {\n        blogLeftDrawerBackground: \"#000\",\n        blogLogo: \"#fff\",\n        blogDescription: \"#fafafa\",\n        authorName: \"#fefefe\",\n        authorDescription: \"#e0e0e0\",\n        textTitle: \"#a1a1a1\",\n        textDesc: \"#e0e0e0\",\n        textDate: \"#a1a1a1\",\n    },\n    // THEME\n    dark: {\n\n    },\n    light: {\n        primary: {\n            light: \"#7986cb\",\n            main: \"#3f51b5\",\n            dark: \"#303f9f\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            light: \"#ff4081\",\n            main: \"#f50057\",\n            dark: \"#c51162\",\n            contrastText: \"#fff\",\n        }\n    }\n\n}\n\nexport default blogConfig;\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MailOutline from '@material-ui/icons/MailOutline';\n\nimport SimpleLink from '@material-ui/core/Link';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisiblity, updateVisiblity } from '../features/sidebarState';\n\n\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport BLOG from '../config';\n\nconst leftDrawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    [theme.breakpoints.up('md')]: {\n      width: leftDrawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: leftDrawerWidth,\n  },\n\n  leftSide: {\n    backgroundColor: theme.blogLeftDrawerBackground,\n    flexGrow: 1,\n    padding: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  leftTop: {\n    flex: 1,\n  },\n  siteName: {\n    fontWeight: theme.typography.fontWeightLight,\n    color: theme.blogLogo,\n    fontSize: \"3rem\",\n    cursor: \"pointer\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    textDecoration: \"none\"\n  },\n  siteDescription: {\n    ...theme.typography.body2,\n    color: theme.blogDescription,\n    fontSize: \"1rem\"\n  },\n  avatarContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  largeAvatar: {\n    width: leftDrawerWidth - 150,\n    height: leftDrawerWidth - 150,\n    alignSelf: \"center\",\n  },\n  authorName: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    color: theme.authorName,\n    fontWeight: theme.typography.fontWeightRegular,\n    alignSelf: \"center\",\n  },\n  authorDes: {\n    ...theme.typography.caption,\n    color: theme.authorDescription,\n    fontWeight: theme.typography.fontWeightMedium,\n    padding: theme.spacing(),\n    borderLeft: `2px solid ${theme.palette.primary.main}`\n  },\n\n}));\n\nfunction LeftSidebar(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const container = window !== undefined ? () => window().document.body : undefined;\n  const mobileOpen =  useSelector(selectVisiblity);\n  const dispatch = useDispatch();\n\n  const handleSidebarToggle = () => {\n    dispatch(updateVisiblity(!mobileOpen));\n  }\n\n  const drawer = (\n    <div className={classes.leftSide}>\n      <Typography component={Link} to=\"/\" align=\"left\" variant=\"h4\" className={classes.siteName}>\n        {BLOG.blogName}\n      </Typography>\n      <div className={classes.leftTop}>\n        <Typography paragraph className={classes.siteDescription}>\n          {BLOG.blogDescription}\n          <br/>\n          <br/>\n        </Typography>\n      </div>\n      <div>\n        <div className={classes.avatarContainer}>\n          <Avatar\n            align=\"center\"\n            alt={BLOG.authorName + \"'s picture\"}\n            src={BLOG.authorImage}\n            className={classes.largeAvatar} />\n          <Typography align=\"left\" variant=\"h6\" className={classes.authorName}>\n            {BLOG.authorName}\n          </Typography>\n          <Typography paragraph align=\"left\" className={classes.authorDes}>\n            {BLOG.authorDescription}\n          </Typography>\n          <Tooltip title={BLOG.authorEmail} aria-label=\"email\" arrow>\n            <SimpleLink href={\"mailto:\"+BLOG.authorEmail}>\n              <IconButton color=\"primary\" aria-label=\"author-email\">\n                <MailOutline />\n              </IconButton>\n            </SimpleLink>\n          </Tooltip>\n        </div>\n      </div>\n    </div>\n  );\n\n  \n\n  return (\n\n    <nav className={classes.drawer} aria-label=\"blog details\">\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleSidebarToggle}\n          classes={{\n              paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n              keepMounted: true\n          }}\n        >\n        {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n}\n\nexport default LeftSidebar;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const currentSlice = createSlice({\n  name: 'currentPost',\n  initialState: {\n    currentPost: null\n  },\n  reducers: {\n    updateCurrentPost: (state, action) => {\n      state.currentPost = action.payload;\n    },\n\n  }\n});\n\nexport const { updateCurrentPost } = currentSlice.actions;\nexport const selectCurrentPost = (state) => state.currentPost.currentPost;\n\nexport default currentSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const allPostsSlice = createSlice({\n  name: 'postsJson',\n  initialState: {\n    postsJson: {}\n  },\n  reducers: {\n    updatePostsJson: (state, action) => {\n      state.postsJson = action.payload;\n    }\n  }\n});\n\nexport const { updatePostsJson } = allPostsSlice.actions;\nexport const getPostsJson = (state) => state.postsJson.postsJson;\n\nexport default allPostsSlice.reducer;","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { sortPosts } from './helper';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AccountTree from '@material-ui/icons/AccountTree';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {JSONPath} from 'jsonpath-plus';\n\nimport TurnedInIcon from '@material-ui/icons/TurnedIn';\nimport TurnedInNotIcon from '@material-ui/icons/TurnedInNot';\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport { parsePostUrl } from './helper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\n\nconst BLOG = {\n  rightDrawerWidth: 300\n}\n\nconst useStyles = makeStyles((theme) => ({\n  rightAside: {\n    width: BLOG.rightDrawerWidth,\n    padding: theme.spacing(1),\n    paddingTop: theme.spacing(3),\n  },\n  lineageHolder: {\n    marginTop: theme.spacing(3)\n  },\n  lineageList: {\n    maxHeight: 300,\n    overflow: \"scroll\"\n  }\n}));\n\nfunction RightSidebar(props) {\n  const classes = useStyles();  \n  const posts = useSelector(getPostsJson);\n  const post = useSelector(selectCurrentPost);\n\n  const [open, setOpen] = React.useState(true);\n  \n  function calculateLineage() {\n    if(post !== null && post !== undefined && post.lineage !== undefined) {\n      const lineageList = JSONPath({path: `$.posts[?(@.lineage === '${post.lineage}')]`, json: posts});\n      lineageList.sort(sortPosts);\n      return {list: lineageList, id: post.id, name: post.lineage};\n    } else {\n      return {};\n    }\n  }\n\n  const lineageData = calculateLineage();\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Hidden smDown implementation=\"css\">\n      <div className={classes.rightAside}>\n        <Card className={classes.root}>\n          <CardContent>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                Site is still under development, if you find any bugs please drop an email. Thank you.\n              </Typography>\n          </CardContent>\n        </Card>\n\n        {\n          lineageData.name === undefined ? (<br/>) : (\n            <div className={classes.lineageHolder}>\n              <ListItem button onClick={handleClick}>\n                <ListItemIcon>\n                  <AccountTree />\n                </ListItemIcon>\n                <ListItemText primary={lineageData.name} secondary=\"post lineage shows all the posts in this series.\" />\n                {open ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List className={classes.lineageList} dense={true}>\n                  {\n                    lineageData.list.map((post, index) => {\n                      return (\n                        <ListItem key={\"lineage-\"+index} component={Link} to={parsePostUrl(post.id, post.title)} selected={post.id === lineageData.id} button>\n                          <ListItemAvatar>\n                            {\n                              post.id === lineageData.id ?\n                              <Avatar >\n                                <TurnedInIcon />\n                              </Avatar> :\n                              <Avatar >\n                                <TurnedInNotIcon />\n                              </Avatar>  \n\n                            }\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={post.title}\n                            secondary={post.created}\n                          />\n                        </ListItem>\n                      );\n                    })\n                  }                  \n                </List>\n              </Collapse>\n            </div>\n          )\n        }\n        \n          \n        \n\n                  \n      </div>\n    </Hidden>\n  );\n}\n\nexport default RightSidebar;\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useSelector } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\n\nimport { parsePostUrl } from './helper';\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginTop: theme.spacing(2),\n  },\n  date: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(12),\n    color: theme.textDate,\n    marginTop: theme.spacing(2)\n  },\n  postContainer: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  skeletonContainer: {\n    marginTop: theme.spacing(2),\n  },\n  cardPostTitle: {\n    fontWeight: theme.typography.fontWeightBold\n  },\n  cardPostDesc: {\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(13)\n  },\n  heading: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(25)\n  }\n}));\n\n\n\nfunction LatestPost(props) {\n  const classes = useStyles();\n  let post = useSelector(selectCurrentPost);\n  const postLatest = useSelector(getPostsJson).posts[0];\n  if (post === null) post = postLatest;\n\n  return(\n    <div className={classes.root}>\n      <div>\n        <Typography className={classes.heading} variant=\"h6\" component=\"h2\">\n          Read Next\n        </Typography>\n        <Card className={classes.postContainer}>\n          <CardActionArea component={Link} to={parsePostUrl(post.id, post.title)}>\n            <CardContent>\n              <Typography className={classes.cardPostTitle} gutterBottom variant=\"h5\" component=\"h2\">\n                {post.title}\n              </Typography>\n              <Typography className={classes.cardPostDesc} variant=\"body2\" component=\"p\">\n                {post.description} \n              </Typography>\n              <Typography className={classes.date}>\n                {post.created}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default LatestPost;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport { parsePostUrl } from './helper';\n\n\nconst useStyles = makeStyles((theme) => ({\n  date: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(12),\n    color: theme.textDate,\n    marginTop: theme.spacing(2),\n  },\n  postContainer: {\n    margin: theme.spacing(1),\n  },\n  cardPostTitle: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(16),\n    overflow: \"hidden\",\n  },\n  cardPostDesc: {\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(16)\n  }\n  \n}));\n\nfunction PostCard(props) {\n  const classes = useStyles();\n  const post = props.post;\n  return(\n    <Card className={classes.postContainer}>\n      <CardActionArea className={classes.clickableArea} component={Link} to={parsePostUrl(post.id, post.title)}>\n        <CardContent>\n          <Typography className={classes.cardPostTitle} gutterBottom variant=\"h5\" component=\"h2\">\n            {post.title}\n          </Typography>\n          <Typography className={classes.cardPostDesc} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {post.description}\n          </Typography>\n          <Typography className={classes.date}>\n            {post.created}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nexport default PostCard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {JSONPath} from 'jsonpath-plus';\nimport PostCard from './PostCard';\n\nimport { useSelector } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    overflow: \"hidden\",\n    [theme.breakpoints.down('md')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(2),\n    },\n  },\n  tabContainer: {\n    [theme.breakpoints.down('md')]: {\n      maxWidth: \"60vw\"\n    },\n    maxWidth: \"40vw\"\n  }\n  \n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction PostsContainer(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const blogData = useSelector(getPostsJson);\n\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return(\n    <div className={classes.root}>\n      <div>\n          <div className={classes.tabContainer}>\n            <Tabs\n              variant=\"scrollable\"\n              scrollButtons=\"on\"\n              value={value}\n              onChange={handleChange}\n              aria-label=\"lineage selector\">\n              {\n                blogData.categories.map((label, index) => (\n                  <Tab key={index+\"tab-section\"} label={label} {...a11yProps(index)} />\n                ))\n              }\n            </Tabs>\n          </div>\n        {\n          blogData.categories.map((label, index) => {\n            return (\n              <TabPanel value={value} index={index} key={index+\"tab\"}>\n                <Grid container spacing={0}>\n                  {\n                    JSONPath({path: `$.posts[?(@.category === '${label}')]`, json: blogData}).map((post) => (\n                      <Grid item xs={12} sm={4} key={post.id}>\n                        <PostCard post={post}/>\n                      </Grid>\n                    ))\n                  }\n                </Grid>\n              </TabPanel>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PostsContainer;\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPostsJson } from '../features/allPostsSlice';\nimport { updateCurrentPost } from '../features/currentPostSlice';\nimport { selectVisiblity, updateVisiblity } from '../features/sidebarState';\n\nconst useStyles = makeStyles((theme) => ({\n  actionBar: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3)\n  }\n}));\n\n\nfunction SearchableActionBar(props) {\n  const classes = useStyles();\n\n  const { posts } = useSelector(getPostsJson);\n  const toggle =  useSelector(selectVisiblity);\n  const dispatch = useDispatch();\n\n  const handleUpdate = (event, newValue) => {\n    if(newValue === null) return;\n    let index = parseInt(newValue.split(\" >\")[0]);\n    dispatch(updateCurrentPost(posts[index]));\n  }\n\n  \n  const handleSidebarToggle = () => {\n    dispatch(updateVisiblity(!toggle));\n  }\n\n  return(\n    <div className={classes.actionBar}>\n      <Hidden mdUp implementation=\"css\">\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={handleSidebarToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n      </Hidden>\n      <Autocomplete\n        freeSolo\n        onChange={handleUpdate}          \n        options={posts.map((option, index) => index + ' > ' + option.title)}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Search Posts\" margin=\"normal\" variant=\"outlined\" />\n        )}\n      />\n    </div>\n  );\n}\n\nexport default SearchableActionBar;\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SelectedPost from './SelectedPost';\nimport PostsContainer from './PostsContainer';\nimport SearchableActionBar from './SearchableActionBar';\n\nimport {\n  motion\n} from 'framer-motion';\n\n\nfunction HomeContent(props) {\n\n  \n  const pageVariants = {\n    in: {\n      opacity: 1,\n      scale: 1,\n    },\n    out: {\n      opacity: 0,\n      scale: 0.8,\n    }\n  }\n\n  const pageTransitions = {\n    duration: .3,\n    type: \"backInOut\",\n  }\n\n  return(\n    <motion.div\n      initial=\"out\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <SearchableActionBar />\n      <SelectedPost />      \n      <PostsContainer />\n    </motion.div>\n  );\n}\n\nexport default HomeContent;\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {JSONPath} from 'jsonpath-plus';\nimport ReactMarkdown from 'react-markdown';\nimport Tex from '@matejmazur/react-katex'\nimport math from 'remark-math'\nimport 'katex/dist/katex.min.css'\nimport Divider from '@material-ui/core/Divider';\n\nimport {\n  useParams\n} from \"react-router-dom\";\n\nimport axios from 'axios';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport { xonokai } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport Chip from '@material-ui/core/Chip';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport {\n  motion\n} from 'framer-motion';\nimport BLOG from '../config';\nimport { nonCachedRequest } from './helper';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\n\nconst useStyles = makeStyles((theme) => ({\n  actionBar: {\n    marginLeft: theme.spacing(3),\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    marginLeft: theme.spacing(10),\n    marginRight: theme.spacing(10),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(6),\n    minHeight: '50vh',\n    fontFamily: 'Roboto',\n    \"& a\": {\n      textDecoration: \"none\",\n    },\n    [theme.breakpoints.down('md')]: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n      marginTop: theme.spacing(1),\n      padding: theme.spacing(2),\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(40),\n    fontWeight: theme.typography.fontWeightBold\n  },\n  divider: {\n    marginTop: theme.spacing(4),\n  },\n  categoryName: {\n    marginRight: theme.spacing(1),\n  },\n  dateHolder: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2)\n  },\n  dateStyle: {\n    fontWeight: theme.typography.fontWeightLight,\n    fontSize: theme.typography.pxToRem(13)\n  },\n  markdownHolder: {\n    // padding: theme.spacing(2)\n  },\n  markdownImage: {\n    maxWidth: '100%'\n  },\n  loader: {\n    alignSelf: 'center'\n  }\n}));\n\n\nconst LoadingHeader = (postMetaData) => {\n  const classes = useStyles();\n\n  return(\n    <div>\n      <Typography className={classes.heading} variant=\"h2\" component=\"h1\">\n        {postMetaData.title}\n      </Typography>\n      <span className={classes.dateHolder}>\n        <Chip className={classes.categoryName} label={postMetaData.category} />\n        <Typography className={classes.dateStyle} variant=\"body2\" component=\"p\">\n          created on {postMetaData.created}\n        </Typography>\n      </span>\n      <Divider className={classes.divider} variant=\"middle\" />\n    </div>\n  );\n\n}\n\nfunction HomeContent(props) {\n  const classes = useStyles();\n  \n  const { idRaw } = useParams();\n  const id = idRaw.split('-')[0];\n\n  const dispatch = useDispatch();\n  const posts = useSelector(getPostsJson);\n  \n  const [loadingPost, setLoadingPost] = React.useState(true);\n  const [postMetaData, setPostMetaData] = React.useState(null);\n  const [postData, setPostData] = React.useState(\"\");\n  const [found, setFound] = React.useState(false);\n\n  const smoothLoadingEnd = () => {\n    setLoadingPost(false);\n  }\n\n  React.useEffect(() => {\n    const renderPostFromLink = (link) => {\n      axios.get(nonCachedRequest(BLOG.URI_POST_FILES+'/'+link, {}))\n        .then((response) => {\n          let post = response.data\n          var lines = post.split('\\n');\n          // get rid of the metadata comments\n          lines.splice(0,5);\n          var newtext = lines.join('\\n');\n\n          setPostData(newtext);\n        })\n        .catch((err) => {\n          setFound(false);\n        })\n        .finally(() => {\n          smoothLoadingEnd();\n        })\n    }\n\n    const post = JSONPath({path: `$.posts[?(@.id === ${id})]`, json: posts})\n\n    if(post.length < 1) {\n      smoothLoadingEnd();\n      setFound(false);\n    } else {\n      setFound(true);\n      dispatch(updateCurrentPost(post[0]));\n      setPostMetaData(post[0]);\n      \n      // // during debugging, simulate network load time\n      // setTimeout(function() {\n      //   renderPostFromLink(post[0].link);\n      //   //your code to be executed after 1 second\n      // }, 1500);\n\n      renderPostFromLink(post[0].link);\n\n      \n    }\n  }, []);\n\n  const renderSkeleton = (msg) => (\n    <div>\n      <Typography gutterBottom variant=\"h6\" component=\"h2\">\n        {msg}\n      </Typography>\n      <Skeleton style={{borderRadius: 5}} variant=\"rect\" width={\"100%\"} height={\"60vh\"} />\n    </div>\n  )\n\n  function ImageRenderer(props) {\n    return <img {...props} className={classes.markdownImage} />\n  }\n  \n\n  const renderers = {\n    math: ({value}) => <Tex block math={value} />,\n    inlineMath: ({value}) => <Tex math={value} />,\n    code: ({language, value}) => {\n      return <SyntaxHighlighter wrapLongLines wrapLines style={xonokai} language={language} children={value} />\n    },\n    image: ImageRenderer\n  }\n\n  const pageVariants = {\n    in: {\n      y: 0\n    },\n    out: {\n      y: \"100vh\"\n    }\n  }\n\n  const pageTransitions = {\n    duration: .5,\n    type: \"backInOut\",\n  }\n\n  return(\n    loadingPost ? <LinearProgress variant=\"indeterminate\" /> :\n    <motion.div\n      initial=\"out\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n\n      <div className={classes.actionBar}>\n        <Tooltip title=\"Go Back\" aria-label=\"go-home\" arrow>\n          <Link to=\"/\">\n            <IconButton color=\"primary\" aria-label=\"go-home\">\n              <ArrowBack />\n            </IconButton>\n          </Link>\n        </Tooltip>\n      </div>  \n\n      <Paper className={classes.paper} elevation={3}>\n        {\n          !found ? (renderSkeleton(\"Post not found, please drop an email so I can have a look at this 👻 Thank you\")) : \n            loadingPost ? <LoadingHeader postMetaData={postMetaData} /> :\n          \n            <div>\n              <Typography className={classes.heading} variant=\"h2\" component=\"h1\">\n                {postMetaData.title}\n              </Typography>\n              <span className={classes.dateHolder}>\n                <Chip className={classes.categoryName} label={postMetaData.category} />\n                <Typography className={classes.dateStyle} variant=\"body2\" component=\"p\">\n                  created on {postMetaData.created}\n                </Typography>\n              </span>\n              <Divider className={classes.divider} variant=\"middle\" />\n              <ReactMarkdown className={classes.markdownHolder} plugins={[math]} renderers={renderers}>\n                {postData}\n              </ReactMarkdown>\n            </div>\n        }\n      </Paper>\n    </motion.div>\n  );\n}\n\nexport default HomeContent;\n","import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nfunction CircularProgressWithLabel(props) {\n    return (\n      <Box position=\"relative\" display=\"inline-flex\">\n        <CircularProgress variant=\"determinate\" {...props} />\n        <Box\n          top={0}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n            props.value,\n          )}%`}</Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  export default CircularProgressWithLabel;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { nonCachedRequest, sortPosts } from './components/helper';\nimport LeftSidebar from './components/LeftSidebar';\nimport RightSidebar from './components/RightSidebar';\nimport HomeContent from './components/HomeContent';\nimport PostPage from './components/PostPage';\nimport CircularProgressWithLabel from './components/CircularProgressWithLabel';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport BLOG from './config';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport axios from 'axios';\n\nimport { updatePostsJson } from './features/allPostsSlice';\nimport { useDispatch } from 'react-redux';\n\nimport Backdrop from '@material-ui/core/Backdrop';\n\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\n\nimport {\n  AnimatePresence\n} from 'framer-motion';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  noPostContainer: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: theme.spacing(3),\n\n  },\n  mainContent: {\n    flex: 1,\n    height: \"100vh\",\n    overflow: \"scroll\",\n  },\n  actionBar: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3)\n  },\n  skeletonContainer: {\n    marginTop: theme.spacing(2),\n  },\n  heading: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(25)\n  }\n\n}));\n\nfunction ResponsiveDrawer(props) {\n  const [loadingPosts, setLoadingPosts] = React.useState(true);\n  const [progress, setProgress] = React.useState(50);\n  const [noPost, setNoPost] = React.useState(false);\n\n  const lightTheme = createMuiTheme({\n    ...BLOG.sidebarTheme,\n    palette: {\n      ...BLOG.light\n    }\n  })\n\n  const classes = useStyles();\n\n  const loc = useLocation();\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    axios.get(nonCachedRequest(BLOG.URI_POSTS), {\n      onDownloadProgress : progressEvent => {\n        if (!progressEvent.lengthComputable) return;\n        let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n        setProgress(percentCompleted);\n      }\n    })\n      .then(function (response) {\n        if(response.data.posts.length === 0) {\n          setNoPost(true);\n        } else {\n          response.data.posts.sort(sortPosts);\n          dispatch(updatePostsJson(response.data)); // put global blog data in redux store\n          setProgress(100);\n          setLoadingPosts(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }, []); // ensuring only one global state update per session\n\n\n\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <div className={classes.root}>\n        <Backdrop invisible open={loadingPosts}>\n          <CircularProgressWithLabel value={progress} />\n        </Backdrop>\n        <LeftSidebar />\n        {\n          loadingPosts ? (<div/>) : (\n              noPost ? (\n                <div className={classes.noPostContainer}>\n                  <Typography className={classes.heading} variant=\"h6\" component=\"h2\">\n                    Blog Under Maintenance, check back later...\n                  </Typography>\n                  <Skeleton className={classes.skeletonContainer} variant=\"rect\" width={\"100%\"} height={150} />\n                </div>\n              ) : (\n                <main className={classes.content}>\n                    <div className={classes.mainContent}>\n                      <AnimatePresence exitBeforeEnter>\n                        <Switch location={loc} key={loc.pathname}>\n                          <Route path=\"/post-:idRaw\">\n                            <PostPage />\n                          </Route>\n                          <Route path=\"/\">\n                            <HomeContent />\n                          </Route>\n                        </Switch>\n                      </AnimatePresence>\n                    </div>\n                    <RightSidebar />\n                </main>\n              )\n          )\n        }\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default ResponsiveDrawer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport postsJsonReducer from './features/allPostsSlice';\nimport currentSliceReducer from './features/currentPostSlice';\nimport sidebarState from './features/sidebarState';\n\nexport default configureStore({\n  reducer: {\n    postsJson: postsJsonReducer,\n    currentPost: currentSliceReducer,\n    sidebarState: sidebarState,\n  }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}